{"ast":null,"code":"const maximum_number_in_mountain_sequence = {\n  id: '0011',\n  name: 'maximum_number_in_mountain_sequence',\n  refLink: ['https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/description', 'https://www.jiuzhang.com/solution/maximum-number-in-mountain-sequence/'],\n  level: 'Easy',\n  tag: ['Binary Search'],\n  notes: `JAVA, js doesn't work`,\n  jsSolution: `\n        // Given a mountain sequence of n integers which increase firstly and then decrease, find the mountain top.\n\n        // 在线评测地址: https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/\n\n        // version 1：二分法\n        public class Solution {\n            /**\n             * @param nums a mountain sequence which increase firstly and then decrease\n             * @return then mountain top\n             */\n            public int mountainSequence(int[] nums) {\n                // Write your code here\n                if (nums == null || nums.length == 0) {\n                    return 0;\n                }\n                int start = 0;\n                int end = nums.length - 1;\n                while (start + 1 < end) {\n                    int mid = start + (end - start) / 2;\n                    if (nums[mid] > nums[mid + 1]) {\n                        end = mid;\n                    } else {\n                        start = mid;\n                    }\n                }\n                return Math.max(nums[start], nums[end]);\n            }\n        }\n    `\n};\nexport default maximum_number_in_mountain_sequence;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/maximum_number_in_mountain_sequence.js"],"names":["maximum_number_in_mountain_sequence","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AACA,MAAMA,mCAAmC,GAAG;AACxCC,EAAAA,EAAE,EAAE,MADoC;AAExCC,EAAAA,IAAI,EAAE,qCAFkC;AAGxCC,EAAAA,OAAO,EAAE,CACL,kFADK,EAEL,wEAFK,CAH+B;AAOxCC,EAAAA,KAAK,EAAE,MAPiC;AAQxCC,EAAAA,GAAG,EAAE,CACD,eADC,CARmC;AAWxCC,EAAAA,KAAK,EAAG,uBAXgC;AAYxCC,EAAAA,UAAU,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAZ2B,CAA5C;AA4CA,eAAeP,mCAAf","sourcesContent":["\nconst maximum_number_in_mountain_sequence = {\n    id: '0011',\n    name: 'maximum_number_in_mountain_sequence',\n    refLink: [\n        'https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/description',\n        'https://www.jiuzhang.com/solution/maximum-number-in-mountain-sequence/',\n    ],\n    level: 'Easy',\n    tag: [\n        'Binary Search',\n    ],\n    notes: `JAVA, js doesn't work`,\n    jsSolution: `\n        // Given a mountain sequence of n integers which increase firstly and then decrease, find the mountain top.\n\n        // 在线评测地址: https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/\n\n        // version 1：二分法\n        public class Solution {\n            /**\n             * @param nums a mountain sequence which increase firstly and then decrease\n             * @return then mountain top\n             */\n            public int mountainSequence(int[] nums) {\n                // Write your code here\n                if (nums == null || nums.length == 0) {\n                    return 0;\n                }\n                int start = 0;\n                int end = nums.length - 1;\n                while (start + 1 < end) {\n                    int mid = start + (end - start) / 2;\n                    if (nums[mid] > nums[mid + 1]) {\n                        end = mid;\n                    } else {\n                        start = mid;\n                    }\n                }\n                return Math.max(nums[start], nums[end]);\n            }\n        }\n    `,\n}\n\nexport default maximum_number_in_mountain_sequence"]},"metadata":{},"sourceType":"module"}