{"ast":null,"code":"var Sort_Colors={id:'0059',name:'Sort_Colors',refLink:['https://www.lintcode.com/problem/sort-colors/description','https://www.jiuzhang.com/solution/sort-colors/#tag-highlight-lang-javascript','https://leetcode-cn.com/problems/sort-colors/solution/75-yan-se-fen-lei-by-alexer-660/'],level:'Hard',tag:[],notes:\"\",jsSolution:\"\\n        // Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, \\n        // with the colors in the order red, white and blue.\\n\\n        // Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\\n\\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/sort-colors/\\n        \\n        const sortColors = function (nums) {\\n            if (nums === null || nums.length <= 1) {\\n                return;\\n            }\\n            var pl = 0;\\n            var pr = nums.length - 1;\\n            var i = 0;\\n            var tmp;\\n            while (i <= pr) {\\n                if (nums[i] === 0) {\\n                    tmp = nums[i];\\n                    nums[i] = nums[pl];\\n                    nums[pl] = tmp;\\n                    pl++;\\n                    i++;\\n                } else if(nums[i] === 1) {\\n                    i++;\\n                } else {\\n                    tmp = nums[i];\\n                    nums[i] = nums[pr];\\n                    nums[pr] = tmp;\\n                    pr--;\\n                }\\n            }\\n        }\\n\\n        \\u89E3\\u6CD5\\u4E00\\uFF1A\\u8BA1\\u6570\\u6392\\u5E8F\\n        \\u601D\\u8DEF\\u5B8C\\u5168\\u540C - \\u7ECF\\u5178\\u6392\\u5E8F\\u7B97\\u6CD5\\u8BB2\\u89E3 - \\u8BA1\\u6570\\u6392\\u5E8F\\n        /**\\n         * @param {number[]} nums\\n         * @return {void} Do not return anything, modify nums in-place instead.\\n         */\\n        var sortColors = function(nums) {\\n            let countSort = (arr,maxVal) => {\\n                let bucketLen = maxVal + 1;\\n                let bucket = new Array(bucketLen).fill(0);\\n                let sortedI = 0;\\n                let arrLen = arr.length;\\n                for(let i = 0;i < arrLen;i++){\\n                    bucket[arr[i]]++;\\n                }\\n                for(let j = 0;j < bucketLen;j++){\\n                    while(bucket[j] > 0){\\n                        arr[sortedI++] = j;\\n                        bucket[j]--;\\n                    }\\n                }\\n                return arr;\\n            }\\n            return countSort(nums,2);\\n        };\\n        \\u89E3\\u6CD5\\u4E8C\\uFF1A\\u4E24\\u8DEF\\u66FF\\u6362\\n        /**\\n         * @param {number[]} nums\\n         * @return {void} Do not return anything, modify nums in-place instead.\\n         */\\n        var sortColors = function(nums) {\\n            let left = 0;\\n            let n = nums.length;\\n            for(let i = 0;i < n;i++){\\n                if(nums[i] === 0){\\n                    [nums[left],nums[i]] = [nums[i],nums[left]];\\n                    left++;\\n                }\\n            }\\n            let right = n - 1;\\n            for(let i = right;i >= left;i--){\\n                if(nums[i] === 2){\\n                    [nums[right],nums[i]] = [nums[i],nums[right]];\\n                    right--;\\n                }\\n            }\\n        };\\n        \\u89E3\\u6CD5\\u4E09\\uFF1A\\u4E00\\u6B21\\u904D\\u5386\\n        \\u89E3\\u6CD5\\u4E8C\\u7684 while \\u7248\\n        /**\\n         * @param {number[]} nums\\n         * @return {void} Do not return anything, modify nums in-place instead.\\n         */\\n        var sortColors = function(nums) {\\n            let left = 0;\\n            let right = nums.length - 1;\\n            let i = 0;\\n            while(i <= right){\\n                if(nums[i] === 0){\\n                    [nums[left],nums[i]] = [nums[i],nums[left]];\\n                    left++;\\n                    i++;\\n                }\\n                else if(nums[i] === 2){\\n                    [nums[right],nums[i]] = [nums[i],nums[right]];\\n                    right--;\\n                }\\n                else {\\n                    i++;\\n                }\\n            }\\n        };\\n        \\u6216\\u8005\\u8FD9\\u6837\\u5199\\u4E5F\\u53EF\\n        /**\\n         * @param {number[]} nums\\n         * @return {void} Do not return anything, modify nums in-place instead.\\n         */\\n        var sortColors = function(nums) {\\n            let left = 0;\\n            let right = nums.length - 1;\\n            let i = 0;\\n            while(i <= right){\\n                while(nums[i] == 2 && i < right){\\n                    [nums[right],nums[i]] = [nums[i],nums[right]];\\n                    right--;\\n                }\\n                while(nums[i] == 0 && i > left){\\n                    [nums[left],nums[i]] = [nums[i],nums[left]];\\n                    left++;\\n                }\\n                i++;\\n            }\\n        };\\n    \"};export default Sort_Colors;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Two_Pointers/Sort_Colors.js"],"names":["Sort_Colors","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,WAAW,CAAG,CAChBC,EAAE,CAAE,MADY,CAEhBC,IAAI,CAAE,aAFU,CAGhBC,OAAO,CAAE,CACL,0DADK,CAEL,8EAFK,CAGL,wFAHK,CAHO,CAQhBC,KAAK,CAAE,MARS,CAShBC,GAAG,CAAE,EATW,CAUhBC,KAAK,GAVW,CAWhBC,UAAU,68IAXM,CAApB,CA6IA,cAAeP,CAAAA,WAAf","sourcesContent":["const Sort_Colors = {\n    id: '0059',\n    name: 'Sort_Colors',  \n    refLink: [\n        'https://www.lintcode.com/problem/sort-colors/description',\n        'https://www.jiuzhang.com/solution/sort-colors/#tag-highlight-lang-javascript',\n        'https://leetcode-cn.com/problems/sort-colors/solution/75-yan-se-fen-lei-by-alexer-660/'\n    ],\n    level: 'Hard',\n    tag: [],\n    notes: ``,\n    jsSolution: `\n        // Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, \n        // with the colors in the order red, white and blue.\n\n        // Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\n\n        // 在线评测地址: https://www.lintcode.com/problem/sort-colors/\n        \n        const sortColors = function (nums) {\n            if (nums === null || nums.length <= 1) {\n                return;\n            }\n            var pl = 0;\n            var pr = nums.length - 1;\n            var i = 0;\n            var tmp;\n            while (i <= pr) {\n                if (nums[i] === 0) {\n                    tmp = nums[i];\n                    nums[i] = nums[pl];\n                    nums[pl] = tmp;\n                    pl++;\n                    i++;\n                } else if(nums[i] === 1) {\n                    i++;\n                } else {\n                    tmp = nums[i];\n                    nums[i] = nums[pr];\n                    nums[pr] = tmp;\n                    pr--;\n                }\n            }\n        }\n\n        解法一：计数排序\n        思路完全同 - 经典排序算法讲解 - 计数排序\n        /**\n         * @param {number[]} nums\n         * @return {void} Do not return anything, modify nums in-place instead.\n         */\n        var sortColors = function(nums) {\n            let countSort = (arr,maxVal) => {\n                let bucketLen = maxVal + 1;\n                let bucket = new Array(bucketLen).fill(0);\n                let sortedI = 0;\n                let arrLen = arr.length;\n                for(let i = 0;i < arrLen;i++){\n                    bucket[arr[i]]++;\n                }\n                for(let j = 0;j < bucketLen;j++){\n                    while(bucket[j] > 0){\n                        arr[sortedI++] = j;\n                        bucket[j]--;\n                    }\n                }\n                return arr;\n            }\n            return countSort(nums,2);\n        };\n        解法二：两路替换\n        /**\n         * @param {number[]} nums\n         * @return {void} Do not return anything, modify nums in-place instead.\n         */\n        var sortColors = function(nums) {\n            let left = 0;\n            let n = nums.length;\n            for(let i = 0;i < n;i++){\n                if(nums[i] === 0){\n                    [nums[left],nums[i]] = [nums[i],nums[left]];\n                    left++;\n                }\n            }\n            let right = n - 1;\n            for(let i = right;i >= left;i--){\n                if(nums[i] === 2){\n                    [nums[right],nums[i]] = [nums[i],nums[right]];\n                    right--;\n                }\n            }\n        };\n        解法三：一次遍历\n        解法二的 while 版\n        /**\n         * @param {number[]} nums\n         * @return {void} Do not return anything, modify nums in-place instead.\n         */\n        var sortColors = function(nums) {\n            let left = 0;\n            let right = nums.length - 1;\n            let i = 0;\n            while(i <= right){\n                if(nums[i] === 0){\n                    [nums[left],nums[i]] = [nums[i],nums[left]];\n                    left++;\n                    i++;\n                }\n                else if(nums[i] === 2){\n                    [nums[right],nums[i]] = [nums[i],nums[right]];\n                    right--;\n                }\n                else {\n                    i++;\n                }\n            }\n        };\n        或者这样写也可\n        /**\n         * @param {number[]} nums\n         * @return {void} Do not return anything, modify nums in-place instead.\n         */\n        var sortColors = function(nums) {\n            let left = 0;\n            let right = nums.length - 1;\n            let i = 0;\n            while(i <= right){\n                while(nums[i] == 2 && i < right){\n                    [nums[right],nums[i]] = [nums[i],nums[right]];\n                    right--;\n                }\n                while(nums[i] == 0 && i > left){\n                    [nums[left],nums[i]] = [nums[i],nums[left]];\n                    left++;\n                }\n                i++;\n            }\n        };\n    `\n}\n\nexport default Sort_Colors\n"]},"metadata":{},"sourceType":"module"}