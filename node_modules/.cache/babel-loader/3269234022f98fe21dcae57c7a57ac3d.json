{"ast":null,"code":"import React,{useEffect,useCallback,useRef}from'react';import DigitalCard from'./DigitalCard';import'./clock.scss';function Clock(){var setInitialNumber=useCallback(function(digitalCardArr){var nowTimeStr=getFormattedDate(new Date(new Date().getTime()),'hhiiss');for(var i=0;i<digitalCardArr.length;i++){digitalCardArr[i].current.setFront(nowTimeStr[i]);}},[]);var setTimer=useCallback(function(digitalCardArr){setInterval(function(){var current=new Date();var currentTimeStr=getFormattedDate(new Date(current.getTime()-1000),'hhiiss');var nextTimeStr=getFormattedDate(current,'hhiiss');for(var i=0;i<digitalCardArr.length;i++){if(currentTimeStr[i]===nextTimeStr[i]){continue;}digitalCardArr[i].current.setNextDigitalCard('down',currentTimeStr[i],nextTimeStr[i]);}},1000);},[]);var digitalHour1=useRef();var digitalHour2=useRef();var digitalMinute1=useRef();var digitalMinute2=useRef();var digitalSecond1=useRef();var digitalSecond2=useRef();useEffect(function(){var digitalCardArr=[digitalHour1,digitalHour2,digitalMinute1,digitalMinute2,digitalSecond1,digitalSecond2];setInitialNumber(digitalCardArr);setTimer(digitalCardArr);},[setInitialNumber,setTimer]);var getFormattedDate=function getFormattedDate(date,dateFormat){if(/(y+)/.test(dateFormat)){dateFormat=dateFormat.replace(RegExp.$1,(date.getFullYear()+'').substr(4-RegExp.$1.length));}var o={'m+':date.getMonth()+1,'d+':date.getDate(),'h+':date.getHours(),'i+':date.getMinutes(),'s+':date.getSeconds()};for(var k in o){if(new RegExp(\"(\".concat(k,\")\")).test(dateFormat)){var str=o[k]+'';dateFormat=dateFormat.replace(RegExp.$1,RegExp.$1.length===1?str:('00'+str).substr(str.length));}}return dateFormat;};return/*#__PURE__*/React.createElement(\"div\",{className:\"clock\"},/*#__PURE__*/React.createElement(DigitalCard,{ref:digitalHour1}),/*#__PURE__*/React.createElement(DigitalCard,{ref:digitalHour2}),/*#__PURE__*/React.createElement(\"em\",null,\":\"),/*#__PURE__*/React.createElement(DigitalCard,{ref:digitalMinute1}),/*#__PURE__*/React.createElement(DigitalCard,{ref:digitalMinute2}),/*#__PURE__*/React.createElement(\"em\",null,\":\"),/*#__PURE__*/React.createElement(DigitalCard,{ref:digitalSecond1}),/*#__PURE__*/React.createElement(DigitalCard,{ref:digitalSecond2}));}export default Clock;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/clock/clock/Clock.js"],"names":["React","useEffect","useCallback","useRef","DigitalCard","Clock","setInitialNumber","digitalCardArr","nowTimeStr","getFormattedDate","Date","getTime","i","length","current","setFront","setTimer","setInterval","currentTimeStr","nextTimeStr","setNextDigitalCard","digitalHour1","digitalHour2","digitalMinute1","digitalMinute2","digitalSecond1","digitalSecond2","date","dateFormat","test","replace","RegExp","$1","getFullYear","substr","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport DigitalCard from './DigitalCard'\nimport './clock.scss'\n\nfunction Clock() {\n    const setInitialNumber =  useCallback(digitalCardArr => {\n        const nowTimeStr = getFormattedDate(new Date(new Date().getTime()), 'hhiiss')\n        for (let i = 0; i < digitalCardArr.length; i++) {\n            digitalCardArr[i].current.setFront(nowTimeStr[i])\n        }\n    }, [])\n\n    const setTimer = useCallback(digitalCardArr => {\n        setInterval(() => {\n            let current = new Date()\n            let currentTimeStr = getFormattedDate(new Date(current.getTime() - 1000), 'hhiiss')\n            let nextTimeStr = getFormattedDate(current, 'hhiiss')\n            for (let i = 0; i < digitalCardArr.length; i++) {\n                if (currentTimeStr[i] === nextTimeStr[i]) {\n                    continue\n                }\n                digitalCardArr[i].current.setNextDigitalCard(\n                    'down',\n                    currentTimeStr[i],\n                    nextTimeStr[i]\n                )\n            }\n        }, 1000)\n    }, [])\n\n    const digitalHour1 = useRef();\n    const digitalHour2 = useRef();\n\n    const digitalMinute1 = useRef();\n    const digitalMinute2 = useRef();\n\n    const digitalSecond1 = useRef();\n    const digitalSecond2 = useRef();\n\n    useEffect(() => {\n        const digitalCardArr = [\n            digitalHour1,\n            digitalHour2,\n            digitalMinute1,\n            digitalMinute2,\n            digitalSecond1,\n            digitalSecond2\n        ]\n        setInitialNumber(digitalCardArr)\n        setTimer(digitalCardArr)\n    }, [setInitialNumber, setTimer]);\n\n    const getFormattedDate = (date, dateFormat) => {\n        if (/(y+)/.test(dateFormat)) {\n            dateFormat = dateFormat.replace(\n                RegExp.$1,\n                (date.getFullYear() + '').substr(4 - RegExp.$1.length)\n            )\n        }\n        const o = {\n            'm+': date.getMonth() + 1,\n            'd+': date.getDate(),\n            'h+': date.getHours(),\n            'i+': date.getMinutes(),\n            's+': date.getSeconds()\n        }\n        for (let k in o) {\n            if (new RegExp(`(${k})`).test(dateFormat)) {\n                let str = o[k] + ''\n                dateFormat = dateFormat.replace(\n                    RegExp.$1,\n                    RegExp.$1.length === 1 ? str : ('00' + str).substr(str.length)\n                )\n            }\n        }\n        return dateFormat\n    }\n\n    return (\n        <div className=\"clock\">\n            <DigitalCard ref={digitalHour1} />\n            <DigitalCard ref={digitalHour2} />\n            <em>:</em>\n            <DigitalCard ref={digitalMinute1} />\n            <DigitalCard ref={digitalMinute2} />\n            <em>:</em>\n            <DigitalCard ref={digitalSecond1} />\n            <DigitalCard ref={digitalSecond2} />\n        </div>\n    )\n}\n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}