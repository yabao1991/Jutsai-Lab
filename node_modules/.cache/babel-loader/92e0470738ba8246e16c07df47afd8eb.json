{"ast":null,"code":"var _jsxFileName = \"/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/components/Table/index.js\";\nimport React from \"react\";\nimport { Table, Card } from 'antd';\nimport * as moment from 'moment';\nimport { connect } from \"react-redux\";\nimport './Table.scss';\nconst columns = [{\n  title: 'WEEK ENDING',\n  dataIndex: 'weekEnding',\n  sorter: {\n    compare: (a, b) => moment(a.weekEnding) - moment(b.weekEnding)\n  },\n  render: record => moment(record).format(\"DD-MM-YYYY\"),\n  align: 'left'\n}, {\n  title: 'RETAIL SALES',\n  dataIndex: 'retailSalesStr',\n  sorter: {\n    compare: (a, b) => a.retailSales - b.retailSales\n  },\n  key: 'retailSalesStr',\n  align: 'right'\n}, {\n  title: 'WHOLESALE SALES',\n  dataIndex: 'wholesaleSalesStr',\n  sorter: {\n    compare: (a, b) => a.mwholesaleSales - b.wholesaleSales\n  },\n  align: 'right'\n}, {\n  title: 'UNITS SOLD',\n  dataIndex: 'unitsSold',\n  sorter: {\n    compare: (a, b) => a.unitsSold - b.unitsSold\n  },\n  align: 'right',\n  responsive: ['md']\n}, {\n  title: 'RETAILER MARGIN',\n  dataIndex: 'retailerMarginStr',\n  sorter: {\n    compare: (a, b) => a.retailerMargin - b.retailerMargin\n  },\n  align: 'right',\n  responsive: ['md']\n}];\n\nconst TableSection = props => {\n  const {\n    salesData\n  } = props;\n  const {\n    data\n  } = salesData;\n  const {\n    sales\n  } = data;\n\n  const onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"tableWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: sales,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  salesData: state.salesData\n});\n\nexport default connect(mapStateToProps)(TableSection);","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/components/Table/index.js"],"names":["React","Table","Card","moment","connect","columns","title","dataIndex","sorter","compare","a","b","weekEnding","render","record","format","align","retailSales","key","mwholesaleSales","wholesaleSales","unitsSold","responsive","retailerMargin","TableSection","props","salesData","data","sales","onChange","pagination","filters","extra","console","log","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Card } from 'antd';\nimport * as moment from 'moment';\nimport { connect } from \"react-redux\";\nimport './Table.scss'\n\nconst columns = [\n  {\n    title: 'WEEK ENDING',\n    dataIndex: 'weekEnding',\n    sorter: {\n      compare: (a, b) => moment(a.weekEnding) - moment(b.weekEnding),\n    },\n    render: (record) => moment(record).format(\"DD-MM-YYYY\"),\n    align:'left',\n  },\n  {\n    title: 'RETAIL SALES',\n    dataIndex: 'retailSalesStr',\n    sorter: {\n      compare: (a, b) => a.retailSales - b.retailSales,\n    },\n    key: 'retailSalesStr',\n    align:'right',\n  },\n  {\n    title: 'WHOLESALE SALES',\n    dataIndex: 'wholesaleSalesStr',\n    sorter: {\n      compare: (a, b) => a.mwholesaleSales - b.wholesaleSales,\n    },\n    align:'right',\n  },\n  {\n    title: 'UNITS SOLD',\n    dataIndex: 'unitsSold',\n    sorter: {\n      compare: (a, b) => a.unitsSold - b.unitsSold,\n    },\n    align:'right',\n    responsive: ['md'],\n  },\n  {\n    title: 'RETAILER MARGIN',\n    dataIndex: 'retailerMarginStr',\n    sorter: {\n      compare: (a, b) => a.retailerMargin - b.retailerMargin,\n    },\n    align:'right',\n    responsive: ['md'],\n  },\n];\n\nconst TableSection = (props) => {\n\n  const { salesData } = props\n  const { data } = salesData\n  const { sales } = data\n\n  const onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n  return (\n    <Card className=\"tableWrap\">\n      <Table \n        columns={columns} \n        dataSource={sales} \n        onChange={onChange} \n      />\n    </Card>\n  )\n}\n\nconst mapStateToProps = state => ({\n  salesData: state.salesData\n});\n\nexport default connect(\n  mapStateToProps,\n)(TableSection);\n"]},"metadata":{},"sourceType":"module"}