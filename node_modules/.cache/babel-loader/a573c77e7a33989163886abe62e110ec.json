{"ast":null,"code":"var maximum_number_in_mountain_sequence={id:'0011',name:'maximum_number_in_mountain_sequence',refLink:['https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/description','https://www.jiuzhang.com/solution/maximum-number-in-mountain-sequence/'],level:'Easy',tag:['Binary Search'],notes:\"JAVA, js doesn't work\",jsSolution:\"\\n        // Given a mountain sequence of n integers which increase firstly and then decrease, find the mountain top.\\n\\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/\\n\\n        // version 1\\uFF1A\\u4E8C\\u5206\\u6CD5\\n        public class Solution {\\n            /**\\n             * @param nums a mountain sequence which increase firstly and then decrease\\n             * @return then mountain top\\n             */\\n            public int mountainSequence(int[] nums) {\\n                // Write your code here\\n                if (nums == null || nums.length == 0) {\\n                    return 0;\\n                }\\n                int start = 0;\\n                int end = nums.length - 1;\\n                while (start + 1 < end) {\\n                    int mid = start + (end - start) / 2;\\n                    if (nums[mid] > nums[mid + 1]) {\\n                        end = mid;\\n                    } else {\\n                        start = mid;\\n                    }\\n                }\\n                return Math.max(nums[start], nums[end]);\\n            }\\n        }\\n    \"};export default maximum_number_in_mountain_sequence;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/maximum_number_in_mountain_sequence.js"],"names":["maximum_number_in_mountain_sequence","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AACA,GAAMA,CAAAA,mCAAmC,CAAG,CACxCC,EAAE,CAAE,MADoC,CAExCC,IAAI,CAAE,qCAFkC,CAGxCC,OAAO,CAAE,CACL,kFADK,CAEL,wEAFK,CAH+B,CAOxCC,KAAK,CAAE,MAPiC,CAQxCC,GAAG,CAAE,CACD,eADC,CARmC,CAWxCC,KAAK,wBAXmC,CAYxCC,UAAU,soCAZ8B,CAA5C,CA4CA,cAAeP,CAAAA,mCAAf","sourcesContent":["\nconst maximum_number_in_mountain_sequence = {\n    id: '0011',\n    name: 'maximum_number_in_mountain_sequence',\n    refLink: [\n        'https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/description',\n        'https://www.jiuzhang.com/solution/maximum-number-in-mountain-sequence/',\n    ],\n    level: 'Easy',\n    tag: [\n        'Binary Search',\n    ],\n    notes: `JAVA, js doesn't work`,\n    jsSolution: `\n        // Given a mountain sequence of n integers which increase firstly and then decrease, find the mountain top.\n\n        // 在线评测地址: https://www.lintcode.com/problem/maximum-number-in-mountain-sequence/\n\n        // version 1：二分法\n        public class Solution {\n            /**\n             * @param nums a mountain sequence which increase firstly and then decrease\n             * @return then mountain top\n             */\n            public int mountainSequence(int[] nums) {\n                // Write your code here\n                if (nums == null || nums.length == 0) {\n                    return 0;\n                }\n                int start = 0;\n                int end = nums.length - 1;\n                while (start + 1 < end) {\n                    int mid = start + (end - start) / 2;\n                    if (nums[mid] > nums[mid + 1]) {\n                        end = mid;\n                    } else {\n                        start = mid;\n                    }\n                }\n                return Math.max(nums[start], nums[end]);\n            }\n        }\n    `,\n}\n\nexport default maximum_number_in_mountain_sequence"]},"metadata":{},"sourceType":"module"}