{"ast":null,"code":"import _objectSpread from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_WEATHER}from\"../Constants\";var WeatherInitialState={loading:false,error:false,success:false,data:{}};var WeatherReducer=function WeatherReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:WeatherInitialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type;switch(type){case GET_WEATHER.PENDING:return _objectSpread(_objectSpread({},state),{},{loading:true});case GET_WEATHER.SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,success:true,data:action.payload});case GET_WEATHER.REJECTED:return _objectSpread(_objectSpread({},state),{},{error:true});default:return state;}};export default WeatherReducer;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/redux/reducer/weatherReducer.jsx"],"names":["GET_WEATHER","WeatherInitialState","loading","error","success","data","WeatherReducer","state","action","type","PENDING","SUCCESS","payload","REJECTED"],"mappings":"mKAAA,OAASA,WAAT,KAA4B,cAA5B,CACA,GAAMC,CAAAA,mBAAmB,CAAG,CAC1BC,OAAO,CAAE,KADiB,CAE1BC,KAAK,CAAE,KAFmB,CAG1BC,OAAO,CAAE,KAHiB,CAI1BC,IAAI,CAAE,EAJoB,CAA5B,CAOA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAyC,IAAxCC,CAAAA,KAAwC,2DAAhCN,mBAAgC,IAAXO,CAAAA,MAAW,8CACtDC,CAAAA,IADsD,CAC7CD,MAD6C,CACtDC,IADsD,CAE9D,OAAQA,IAAR,EACE,IAAKT,CAAAA,WAAW,CAACU,OAAjB,CACE,sCACKH,KADL,MAEEL,OAAO,CAAE,IAFX,GAIF,IAAKF,CAAAA,WAAW,CAACW,OAAjB,CACE,sCACKJ,KADL,MAEEL,OAAO,CAAE,KAFX,CAGEE,OAAO,CAAE,IAHX,CAIEC,IAAI,CAAEG,MAAM,CAACI,OAJf,GAMF,IAAKZ,CAAAA,WAAW,CAACa,QAAjB,CACE,sCACKN,KADL,MAEEJ,KAAK,CAAE,IAFT,GAIF,QACE,MAAOI,CAAAA,KAAP,CAnBJ,CAqBD,CAvBD,CAyBA,cAAeD,CAAAA,cAAf","sourcesContent":["import { GET_WEATHER } from \"../Constants\";\nconst WeatherInitialState = {\n  loading: false,\n  error: false,\n  success: false,\n  data: {}\n};\n\nconst WeatherReducer = (state = WeatherInitialState, action) => {\n  const { type } = action;\n  switch (type) {\n    case GET_WEATHER.PENDING:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_WEATHER.SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        data: action.payload\n      };\n    case GET_WEATHER.REJECTED:\n      return {\n        ...state,\n        error: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default WeatherReducer;\n"]},"metadata":{},"sourceType":"module"}