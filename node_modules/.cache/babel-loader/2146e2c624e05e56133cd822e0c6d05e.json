{"ast":null,"code":"const Binary_Tree_Level_Order_Traversal = {\n  id: '0026',\n  name: 'Binary_Tree_Level_Order_Traversal',\n  refLink: ['https://www.lintcode.com/problem/binary-tree-level-order-traversal/description', 'https://www.jiuzhang.com/solution/binary-tree-level-order-traversal/#tag-highlight', 'https://leetcode-cn.com/problems/binary-tree-level-order-traversal/solution/102er-cha-shu-de-ceng-ci-bian-li-javascript-ti-jie/'],\n  level: 'Medium',\n  tag: [''],\n  notes: ``,\n  jsSolution: `\n        // Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\n\n        // 在线评测地址: https://www.lintcode.com/problem/binary-tree-level-order-traversal/\n\n\n        const levelOrder = root => {\n            if (!root) return []\n            let res = [], queue = [root]\n            while (queue.length) {\n              let arr = [], temp = []\n              while (queue.length) {\n                let curr = queue.shift()\n                arr.push(curr.val)\n                if (curr.left) temp.push(curr.left)\n                if (curr.right) temp.push(curr.right)\n              }\n              queue = temp\n              res.push(arr)\n            }\n            return res\n        }\n    `\n};\nexport default Binary_Tree_Level_Order_Traversal;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Breadth_First_Search/Binary_Tree_Level_Order_Traversal.js"],"names":["Binary_Tree_Level_Order_Traversal","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,MAAMA,iCAAiC,GAAG;AACtCC,EAAAA,EAAE,EAAE,MADkC;AAEtCC,EAAAA,IAAI,EAAE,mCAFgC;AAGtCC,EAAAA,OAAO,EAAE,CACL,gFADK,EAEL,oFAFK,EAGL,iIAHK,CAH6B;AAQtCC,EAAAA,KAAK,EAAE,QAR+B;AAStCC,EAAAA,GAAG,EAAE,CACD,EADC,CATiC;AAYtCC,EAAAA,KAAK,EAAG,EAZ8B;AAatCC,EAAAA,UAAU,EAAG;;;;;;;;;;;;;;;;;;;;;;;AAbyB,CAA1C;AAsCA,eAAeP,iCAAf","sourcesContent":["const Binary_Tree_Level_Order_Traversal = {\n    id: '0026',\n    name: 'Binary_Tree_Level_Order_Traversal',\n    refLink: [\n        'https://www.lintcode.com/problem/binary-tree-level-order-traversal/description',\n        'https://www.jiuzhang.com/solution/binary-tree-level-order-traversal/#tag-highlight',\n        'https://leetcode-cn.com/problems/binary-tree-level-order-traversal/solution/102er-cha-shu-de-ceng-ci-bian-li-javascript-ti-jie/'\n    ],\n    level: 'Medium',\n    tag: [\n        ''\n    ],\n    notes: ``,\n    jsSolution: `\n        // Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).\n\n        // 在线评测地址: https://www.lintcode.com/problem/binary-tree-level-order-traversal/\n\n\n        const levelOrder = root => {\n            if (!root) return []\n            let res = [], queue = [root]\n            while (queue.length) {\n              let arr = [], temp = []\n              while (queue.length) {\n                let curr = queue.shift()\n                arr.push(curr.val)\n                if (curr.left) temp.push(curr.left)\n                if (curr.right) temp.push(curr.right)\n              }\n              queue = temp\n              res.push(arr)\n            }\n            return res\n        }\n    `\n}\n\nexport default Binary_Tree_Level_Order_Traversal\n"]},"metadata":{},"sourceType":"module"}