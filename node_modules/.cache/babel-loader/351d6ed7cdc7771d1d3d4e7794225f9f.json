{"ast":null,"code":"import _classCallCheck from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var Axios=/*#__PURE__*/function(){function Axios(){_classCallCheck(this,Axios);}_createClass(Axios,null,[{key:\"GET\",value:function GET(options){var baseApi='https://www.reddit.com/';return new Promise(function(resolve,reject){axios({url:options.url,method:'get',baseURL:baseApi,timeout:5000,params:options.data&&options.data.params||''}).then(function(response){if(response.status===200){resolve(response.data.data.children);}else{reject(response.data.data.children);}});});}}]);return Axios;}();export{Axios as default};","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/RedditBrowserApp/pages/axios/index.js"],"names":["axios","Axios","options","baseApi","Promise","resolve","reject","url","method","baseURL","timeout","params","data","then","response","status","children"],"mappings":"sUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEqBC,CAAAA,K,8HACNC,O,CAAS,CAChB,GAAIC,CAAAA,OAAO,CAAG,yBAAd,CACA,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAASC,MAAT,CAAkB,CACjCN,KAAK,CAAC,CACFO,GAAG,CAAEL,OAAO,CAACK,GADX,CAEFC,MAAM,CAAE,KAFN,CAGFC,OAAO,CAAEN,OAHP,CAIFO,OAAO,CAAE,IAJP,CAKFC,MAAM,CAAGT,OAAO,CAACU,IAAR,EAAgBV,OAAO,CAACU,IAAR,CAAaD,MAA9B,EAAyC,EAL/C,CAAD,CAAL,CAMGE,IANH,CAMQ,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAAxB,CAA6B,CACzBV,OAAO,CAACS,QAAQ,CAACF,IAAT,CAAcA,IAAd,CAAmBI,QAApB,CAAP,CACH,CAFD,IAEO,CACHV,MAAM,CAACQ,QAAQ,CAACF,IAAT,CAAcA,IAAd,CAAmBI,QAApB,CAAN,CACH,CACJ,CAZD,EAaH,CAdM,CAAP,CAeH,C,4BAlBgBf,K","sourcesContent":["import axios from 'axios'\r\n\r\nexport default class Axios {\r\n    static GET(options) {\r\n        let baseApi = 'https://www.reddit.com/'\r\n        return new Promise((resolve,reject)=>{\r\n            axios({\r\n                url: options.url,\r\n                method: 'get',\r\n                baseURL: baseApi,\r\n                timeout: 5000,\r\n                params: (options.data && options.data.params) || ''\r\n            }).then((response) => {\r\n                if (response.status === 200) {\r\n                    resolve(response.data.data.children);\r\n                } else {\r\n                    reject(response.data.data.children);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}