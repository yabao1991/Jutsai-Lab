{"ast":null,"code":"import axios from 'axios';\nexport default class Axios {\n  static GET(options) {\n    let baseApi = 'https://www.reddit.com/';\n    return new Promise((resolve, reject) => {\n      axios({\n        url: options.url,\n        method: 'get',\n        baseURL: baseApi,\n        timeout: 5000,\n        params: options.data && options.data.params || ''\n      }).then(response => {\n        if (response.status === 200) {\n          resolve(response.data.data.children);\n        } else {\n          reject(response.data.data.children);\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/RedditBrowserApp/pages/axios/index.js"],"names":["axios","Axios","GET","options","baseApi","Promise","resolve","reject","url","method","baseURL","timeout","params","data","then","response","status","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,KAAN,CAAY;AACvB,SAAOC,GAAP,CAAWC,OAAX,EAAoB;AAChB,QAAIC,OAAO,GAAG,yBAAd;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACjCP,MAAAA,KAAK,CAAC;AACFQ,QAAAA,GAAG,EAAEL,OAAO,CAACK,GADX;AAEFC,QAAAA,MAAM,EAAE,KAFN;AAGFC,QAAAA,OAAO,EAAEN,OAHP;AAIFO,QAAAA,OAAO,EAAE,IAJP;AAKFC,QAAAA,MAAM,EAAGT,OAAO,CAACU,IAAR,IAAgBV,OAAO,CAACU,IAAR,CAAaD,MAA9B,IAAyC;AAL/C,OAAD,CAAL,CAMGE,IANH,CAMSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBV,UAAAA,OAAO,CAACS,QAAQ,CAACF,IAAT,CAAcA,IAAd,CAAmBI,QAApB,CAAP;AACH,SAFD,MAEO;AACHV,UAAAA,MAAM,CAACQ,QAAQ,CAACF,IAAT,CAAcA,IAAd,CAAmBI,QAApB,CAAN;AACH;AACJ,OAZD;AAaH,KAdM,CAAP;AAeH;;AAlBsB","sourcesContent":["import axios from 'axios'\r\n\r\nexport default class Axios {\r\n    static GET(options) {\r\n        let baseApi = 'https://www.reddit.com/'\r\n        return new Promise((resolve,reject)=>{\r\n            axios({\r\n                url: options.url,\r\n                method: 'get',\r\n                baseURL: baseApi,\r\n                timeout: 5000,\r\n                params: (options.data && options.data.params) || ''\r\n            }).then((response) => {\r\n                if (response.status === 200) {\r\n                    resolve(response.data.data.children);\r\n                } else {\r\n                    reject(response.data.data.children);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}