{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GET_SALESDATA}from\"./Constants\";// import axios from \"axios\";\n// import { BASE_URL } from \"../utils/ApiConstants\";\n// import { toast } from \"react-toastify\";\nimport{mockData}from\"../assets/mockData/data\";import UtilFunctions from\"../utils/UtilFunctions\";var mockId=\"B007TIE0GQ\";export var GetSalesData=function GetSalesData(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:mockId;return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var timer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:GET_SALESDATA.PENDING});// dispatch({ type: GET_SALESDATA.SUCCESS, payload: UtilFunctions.getFormattedData(mockData) })\ntimer=setInterval(function(){dispatch({type:GET_SALESDATA.SUCCESS,payload:UtilFunctions.getFormattedData(mockData)});clearInterval(timer);},2000);// axios.get(BASE_URL, {\n//   params: {\n//     productId: id\n//   }\n// })\n// .then(response =>\n//   dispatch({ type: GET_SALESDATA.SUCCESS, payload: response.data })\n// )\n// .catch(err => {\n//   console.log(err.response, err);\n//   toast.error(err.response.data.message, {\n//     position: \"bottom-center\",\n//     autoClose: 3000,\n//     hideProgressBar: false,\n//     closeOnClick: true,\n//     pauseOnHover: false,\n//     draggable: false\n//   });\n//   dispatch({ type: GET_SALESDATA.REJECTED, payload: err.response });\n// });\ncase 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/redux/Actions.jsx"],"names":["GET_SALESDATA","mockData","UtilFunctions","mockId","GetSalesData","id","dispatch","type","PENDING","timer","setInterval","SUCCESS","payload","getFormattedData","clearInterval"],"mappings":"qUAAA,OAASA,aAAT,KAA8B,aAA9B,CACA;AACA;AACA;AACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CAGA,GAAIC,CAAAA,MAAM,CAAG,YAAb,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAC1BC,CAAAA,EAD0B,2DACrBF,MADqB,gGAEvB,iBAAMG,QAAN,4HACHA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,aAAa,CAACQ,OAAtB,CAAD,CAAR,CACA;AAEMC,KAJH,CAIWC,WAAW,CAAC,UAAM,CAC9BJ,QAAQ,CAAC,CAAEC,IAAI,CAAEP,aAAa,CAACW,OAAtB,CAA+BC,OAAO,CAAEV,aAAa,CAACW,gBAAd,CAA+BZ,QAA/B,CAAxC,CAAD,CAAR,CACAa,aAAa,CAACL,KAAD,CAAb,CACD,CAHwB,CAGtB,IAHsB,CAJtB,CASH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BG,sDAFuB,gEAArB","sourcesContent":["import { GET_SALESDATA } from \"./Constants\";\n// import axios from \"axios\";\n// import { BASE_URL } from \"../utils/ApiConstants\";\n// import { toast } from \"react-toastify\";\nimport { mockData } from \"../assets/mockData/data\"\nimport UtilFunctions from \"../utils/UtilFunctions\"\n\n\nlet mockId = \"B007TIE0GQ\"\n\nexport const GetSalesData = (\n  id = mockId\n) => async dispatch => {\n  dispatch({ type: GET_SALESDATA.PENDING });\n  // dispatch({ type: GET_SALESDATA.SUCCESS, payload: UtilFunctions.getFormattedData(mockData) })\n\n  const timer = setInterval(() => {\n    dispatch({ type: GET_SALESDATA.SUCCESS, payload: UtilFunctions.getFormattedData(mockData) })\n    clearInterval(timer)\n  }, 2000)\n  \n  // axios.get(BASE_URL, {\n  //   params: {\n  //     productId: id\n  //   }\n  // })\n  // .then(response =>\n  //   dispatch({ type: GET_SALESDATA.SUCCESS, payload: response.data })\n  // )\n  // .catch(err => {\n  //   console.log(err.response, err);\n  //   toast.error(err.response.data.message, {\n  //     position: \"bottom-center\",\n  //     autoClose: 3000,\n  //     hideProgressBar: false,\n  //     closeOnClick: true,\n  //     pauseOnHover: false,\n  //     draggable: false\n  //   });\n  //   dispatch({ type: GET_SALESDATA.REJECTED, payload: err.response });\n  // });\n};"]},"metadata":{},"sourceType":"module"}