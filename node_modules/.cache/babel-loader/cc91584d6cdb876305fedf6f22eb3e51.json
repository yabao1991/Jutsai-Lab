{"ast":null,"code":"const search_in_rotated_sorted_array = {\n  id: '0013',\n  name: 'search_in_rotated_sorted_array',\n  refLink: ['https://www.lintcode.com/problem/search-in-rotated-sorted-array/description', 'https://www.jiuzhang.com/solution/search-in-rotated-sorted-array/#tag-highlight-lang-javascript', 'https://leetcode-cn.com/problems/search-in-rotated-sorted-array/solution/'],\n  level: 'Medium',\n  tag: ['Binary Search'],\n  notes: ``,\n  jsSolution: `\n        // Suppose a sorted array is rotated at some pivot unknown to you beforehand.\n\n        // (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\n        \n        // You are given a target value to search. If found in the array return its index, otherwise return -1.\n        \n        // You may assume no duplicate exists in the array.\n        \n        // 在线评测地址: https://www.lintcode.com/problem/search-in-rotated-sorted-array/\n\n        /**\n         * @param A: an integer rotated sorted array\n         * @param target: an integer to be searched\n         * @return: an integer\n         */\n\n        const search = function (A, target) {\n            if (A === null || A.length === 0) {\n                return -1;\n            }\n            var start = 0;\n            var end = A.length - 1;\n            var mid;\n            while (start + 1 < end) {\n                mid = start + Math.floor((end - start) / 2);\n                if (A[mid] === target) {\n                    return mid;\n                }\n                if (A[start] < A[mid]) {\n                    if (A[start] <= target && target <= A[mid]) {\n                        end = mid;\n                    } else {\n                        start = mid;\n                    }\n                } else {\n                    if (A[mid] <= target && target <= A[end]) {\n                        start = mid;\n                    } else {\n                        end = mid;\n                    }\n                }\n            }\n            if (A[start] === target) {\n                return start;\n            }\n            if (A[end] === target) {\n                return end;\n            }\n            return -1;\n        }\n    `\n};\nexport default search_in_rotated_sorted_array;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/search_in_rotated_sorted_array.js"],"names":["search_in_rotated_sorted_array","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,MAAMA,8BAA8B,GAAG;AACnCC,EAAAA,EAAE,EAAE,MAD+B;AAEnCC,EAAAA,IAAI,EAAE,gCAF6B;AAGnCC,EAAAA,OAAO,EAAE,CACL,6EADK,EAEL,iGAFK,EAGL,2EAHK,CAH0B;AAQnCC,EAAAA,KAAK,EAAE,QAR4B;AASnCC,EAAAA,GAAG,EAAE,CACD,eADC,CAT8B;AAYnCC,EAAAA,KAAK,EAAG,EAZ2B;AAanCC,EAAAA,UAAU,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbsB,CAAvC;AAmEA,eAAeP,8BAAf","sourcesContent":["const search_in_rotated_sorted_array = {\n    id: '0013',\n    name: 'search_in_rotated_sorted_array',\n    refLink: [\n        'https://www.lintcode.com/problem/search-in-rotated-sorted-array/description',\n        'https://www.jiuzhang.com/solution/search-in-rotated-sorted-array/#tag-highlight-lang-javascript',\n        'https://leetcode-cn.com/problems/search-in-rotated-sorted-array/solution/'\n    ],\n    level: 'Medium',\n    tag: [\n        'Binary Search',\n    ],\n    notes: ``,\n    jsSolution: `\n        // Suppose a sorted array is rotated at some pivot unknown to you beforehand.\n\n        // (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\n        \n        // You are given a target value to search. If found in the array return its index, otherwise return -1.\n        \n        // You may assume no duplicate exists in the array.\n        \n        // 在线评测地址: https://www.lintcode.com/problem/search-in-rotated-sorted-array/\n\n        /**\n         * @param A: an integer rotated sorted array\n         * @param target: an integer to be searched\n         * @return: an integer\n         */\n\n        const search = function (A, target) {\n            if (A === null || A.length === 0) {\n                return -1;\n            }\n            var start = 0;\n            var end = A.length - 1;\n            var mid;\n            while (start + 1 < end) {\n                mid = start + Math.floor((end - start) / 2);\n                if (A[mid] === target) {\n                    return mid;\n                }\n                if (A[start] < A[mid]) {\n                    if (A[start] <= target && target <= A[mid]) {\n                        end = mid;\n                    } else {\n                        start = mid;\n                    }\n                } else {\n                    if (A[mid] <= target && target <= A[end]) {\n                        start = mid;\n                    } else {\n                        end = mid;\n                    }\n                }\n            }\n            if (A[start] === target) {\n                return start;\n            }\n            if (A[end] === target) {\n                return end;\n            }\n            return -1;\n        }\n    `,\n}\n\nexport default search_in_rotated_sorted_array"]},"metadata":{},"sourceType":"module"}