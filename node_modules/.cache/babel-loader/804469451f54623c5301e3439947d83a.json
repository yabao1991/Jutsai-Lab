{"ast":null,"code":"var Two_Sum_Unique_pairs={id:'0053',name:'Two_Sum_Unique_pairs',refLink:['https://www.lintcode.com/problem/two-sum-unique-pairs/description','https://www.jiuzhang.com/solution/two-sum-unique-pairs/#tag-highlight'],level:'Easy',tag:[],notes:\"JAVA only\",jsSolution:\"\\n        // Given an array of integers, find how many unique pairs in the array such that their sum is equal to a specific target number. Please return the number of pairs.\\n\\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/two-sum-unique-pairs/\\n        \\n        public class Solution {\\n            /**\\n             * @param nums an array of integer\\n             * @param target an integer\\n             * @return an integer\\n             */\\n            public int twoSum6(int[] nums, int target) {\\n                // Write your code here\\n                if (nums == null || nums.length < 2)\\n                    return 0;\\n        \\n                Arrays.sort(nums);\\n                int cnt = 0;\\n                int left = 0, right = nums.length - 1;\\n                while (left < right) {\\n                    int v = nums[left] + nums[right];\\n                    if (v == target) {\\n                        cnt ++;\\n                        left ++;\\n                        right --;\\n                        while (left < right && nums[right] == nums[right + 1])\\n                            right --;\\n                        while (left < right && nums[left] == nums[left - 1])\\n                            left ++;\\n                    } else if (v > target) {\\n                        right --;\\n                    } else {\\n                        left ++;\\n                    }\\n                }\\n                return cnt;\\n            }\\n        }\\n    \"};export default Two_Sum_Unique_pairs;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Two_Pointers/Two_Sum_Unique_pairs.js"],"names":["Two_Sum_Unique_pairs","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,oBAAoB,CAAG,CACzBC,EAAE,CAAE,MADqB,CAEzBC,IAAI,CAAE,sBAFmB,CAGzBC,OAAO,CAAE,CACL,mEADK,CAEL,uEAFK,CAHgB,CAQzBC,KAAK,CAAE,MARkB,CASzBC,GAAG,CAAE,EAToB,CAUzBC,KAAK,YAVoB,CAWzBC,UAAU,g/CAXe,CAA7B,CAoDA,cAAeP,CAAAA,oBAAf","sourcesContent":["const Two_Sum_Unique_pairs = {\n    id: '0053',\n    name: 'Two_Sum_Unique_pairs', \n    refLink: [\n        'https://www.lintcode.com/problem/two-sum-unique-pairs/description',\n        'https://www.jiuzhang.com/solution/two-sum-unique-pairs/#tag-highlight',\n\n    ],\n    level: 'Easy',\n    tag: [],\n    notes: `JAVA only`,\n    jsSolution: `\n        // Given an array of integers, find how many unique pairs in the array such that their sum is equal to a specific target number. Please return the number of pairs.\n\n        // 在线评测地址: https://www.lintcode.com/problem/two-sum-unique-pairs/\n        \n        public class Solution {\n            /**\n             * @param nums an array of integer\n             * @param target an integer\n             * @return an integer\n             */\n            public int twoSum6(int[] nums, int target) {\n                // Write your code here\n                if (nums == null || nums.length < 2)\n                    return 0;\n        \n                Arrays.sort(nums);\n                int cnt = 0;\n                int left = 0, right = nums.length - 1;\n                while (left < right) {\n                    int v = nums[left] + nums[right];\n                    if (v == target) {\n                        cnt ++;\n                        left ++;\n                        right --;\n                        while (left < right && nums[right] == nums[right + 1])\n                            right --;\n                        while (left < right && nums[left] == nums[left - 1])\n                            left ++;\n                    } else if (v > target) {\n                        right --;\n                    } else {\n                        left ++;\n                    }\n                }\n                return cnt;\n            }\n        }\n    `\n}\n\nexport default Two_Sum_Unique_pairs\n"]},"metadata":{},"sourceType":"module"}