{"ast":null,"code":"import _objectSpread from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import*as moment from'moment';var UtilFunctions=/*#__PURE__*/function(){function UtilFunctions(){_classCallCheck(this,UtilFunctions);}_createClass(UtilFunctions,null,[{key:\"getFormattedData\",value:function getFormattedData(data){var formattedSalesDataArr=[];var productDataObj=data[0];var salesArr=productDataObj.sales.sort(function(a,b){return new Date(a.weekEnding)-new Date(b.weekEnding);});salesArr.map(function(itemDataObj,index){salesArr[index].key=index;salesArr[index].month=moment(itemDataObj.weekEnding).format(\"MMM\").toUpperCase();salesArr[index].retailSalesStr=UtilFunctions.formatMoney(itemDataObj.retailSales);salesArr[index].wholesaleSalesStr=UtilFunctions.formatMoney(itemDataObj.wholesaleSales);salesArr[index].retailerMarginStr=UtilFunctions.formatMoney(itemDataObj.retailerMargin);return formattedSalesDataArr.push(salesArr[index]);});// const formattedChartDataArr = UtilFunctions.unique(formattedSalesDataArr)\nvar formattedChartDataArr=UtilFunctions.getLastEntryOfMonth(formattedSalesDataArr);return _objectSpread(_objectSpread({},productDataObj),{},{sales:formattedSalesDataArr,chartSalesDataArr:formattedChartDataArr});}},{key:\"formatMoney\",value:function formatMoney(number){number=number||0;var j;var negative=number<0?\"-\":\"\";var i=parseInt(number=Math.abs(+number||0).toFixed(0),10)+\"\";j=(j=i.length)>3?j%3:0;return\"$\".concat(negative).concat(j?i.substr(0,j)+',':'').concat(i.substr(j).replace(/(\\d{3})(?=\\d)/g,'$1,'));}},{key:\"unique\",value:function unique(dataArr){var result={};var finalResult=[];for(var i=0;i<dataArr.length;i++){result[dataArr[i].month]=dataArr[i];}for(var item in result){finalResult.push(result[item]);}return finalResult;}}]);return UtilFunctions;}();UtilFunctions.getLastEntryOfMonth=function(sales){var returnArr=[];var startMonth=\"Jan\";for(var i=0;i<sales.length-1;i++){var obj=sales[i+1];if(obj.month!==startMonth){returnArr.push(sales[i]);startMonth=obj.month;}}returnArr.push(sales[sales.length-1]);return returnArr.sort(function(a,b){return new Date(a.weekEnding)-new Date(b.weekEnding);});};export default UtilFunctions;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/utils/UtilFunctions.js"],"names":["moment","UtilFunctions","data","formattedSalesDataArr","productDataObj","salesArr","sales","sort","a","b","Date","weekEnding","map","itemDataObj","index","key","month","format","toUpperCase","retailSalesStr","formatMoney","retailSales","wholesaleSalesStr","wholesaleSales","retailerMarginStr","retailerMargin","push","formattedChartDataArr","getLastEntryOfMonth","chartSalesDataArr","number","j","negative","i","parseInt","Math","abs","toFixed","length","substr","replace","dataArr","result","finalResult","item","returnArr","startMonth","obj"],"mappings":"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","sourcesContent":["import * as moment from 'moment';\n\nclass UtilFunctions {\n    static getFormattedData(data) {\n        const formattedSalesDataArr = []\n        let productDataObj = data[0]\n\n        let salesArr = productDataObj.sales.sort((a, b) => {\n            return new Date(a.weekEnding) - new Date(b.weekEnding);\n        });\n\n        salesArr.map((itemDataObj, index) => {\n            salesArr[index].key = index\n            salesArr[index].month = moment(itemDataObj.weekEnding).format(\"MMM\").toUpperCase()\n            salesArr[index].retailSalesStr = UtilFunctions.formatMoney(itemDataObj.retailSales)\n            salesArr[index].wholesaleSalesStr = UtilFunctions.formatMoney(itemDataObj.wholesaleSales)\n            salesArr[index].retailerMarginStr = UtilFunctions.formatMoney(itemDataObj.retailerMargin)\n            return formattedSalesDataArr.push(salesArr[index])\n        })\n\n        // const formattedChartDataArr = UtilFunctions.unique(formattedSalesDataArr)\n        const formattedChartDataArr = UtilFunctions.getLastEntryOfMonth(formattedSalesDataArr)\n        \n        return {\n            ...productDataObj,\n            sales: formattedSalesDataArr,\n            chartSalesDataArr: formattedChartDataArr\n        }\n    };\n    static formatMoney(number) {\n        number = number || 0;\n        let j\n        let negative = number < 0 ? \"-\" : \"\"\n        let i = parseInt(number = Math.abs(+number || 0).toFixed(0), 10) + \"\"\n        j = (j = i.length) > 3 ? j % 3 : 0\n        return `$${negative}${j ? i.substr(0, j) + ',' : ''}${i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1,')}`;\n    };\n    static unique(dataArr){\n        let result = {};\n        let finalResult=[];\n        for(let i=0;i<dataArr.length;i++){\n            result[dataArr[i].month]=dataArr[i];\n        }\n        for(let item in result){\n            finalResult.push(result[item]);\n        }\n        return finalResult;\n    };\n    static getLastEntryOfMonth = sales => {\n        const returnArr = [];\n        let startMonth = \"Jan\";\n        for (let i = 0; i < sales.length - 1; i++) {\n          let obj = sales[i + 1];\n          if (obj.month !== startMonth) {\n            returnArr.push(sales[i]);\n            startMonth = obj.month;\n          }\n        }\n        returnArr.push(sales[sales.length - 1]);\n        return returnArr.sort((a, b) => {\n          return new Date(a.weekEnding) - new Date(b.weekEnding);\n        });\n      };\n    \n}\n\nexport default UtilFunctions\n"]},"metadata":{},"sourceType":"module"}