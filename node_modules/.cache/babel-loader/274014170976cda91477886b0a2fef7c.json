{"ast":null,"code":"var Combination_Sum_II={id:'0036',name:'Combination_Sum_II',refLink:['https://www.lintcode.com/problem/combination-sum-ii/description','https://leetcode-cn.com/problems/combination-sum-ii/solution/40-zu-he-zong-he-ii-by-alexer-660/','https://www.jiuzhang.com/solution/combination-sum-ii/'],level:'Easy',tag:[],notes:\"\",jsSolution:\"\\n        // Given an array num and a number target. Find all unique combinations in num where the numbers sum to target.\\n\\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/combination-sum-ii/\\n\\n        const combinationSum2 = function(num, target) {\\n            let n = num.length;\\n            let res = [];\\n            let tmpPath = [];\\n            num = num.sort((a,b) => {return a - b})\\n            let backtrack = (tmpPath,target,start) => {\\n                if(target == 0){\\n                    res.push(tmpPath);\\n                    return;\\n                }\\n                for(let i = start;i < n;i++){\\n                    if(target < num[i]) break;\\n                    if(i > start && num[i-1] == num[i]) continue;\\n                    tmpPath.push(num[i]);\\n                    backtrack(tmpPath.slice(),target - num[i],i + 1);\\n                    tmpPath.pop();\\n                }\\n            }\\n            backtrack(tmpPath,target,0);\\n            return res;\\n        };\\n    \"};export default Combination_Sum_II;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Depth_First_Search/Combination_Sum_II.js"],"names":["Combination_Sum_II","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,kBAAkB,CAAG,CACvBC,EAAE,CAAE,MADmB,CAEvBC,IAAI,CAAE,oBAFiB,CAGvBC,OAAO,CAAE,CACL,iEADK,CAEL,iGAFK,CAGL,uDAHK,CAHc,CAQvBC,KAAK,CAAE,MARgB,CASvBC,GAAG,CAAE,EATkB,CAUvBC,KAAK,GAVkB,CAWvBC,UAAU,khCAXa,CAA3B,CAwCA,cAAeP,CAAAA,kBAAf","sourcesContent":["const Combination_Sum_II = {\n    id: '0036',\n    name: 'Combination_Sum_II', \n    refLink: [\n        'https://www.lintcode.com/problem/combination-sum-ii/description',\n        'https://leetcode-cn.com/problems/combination-sum-ii/solution/40-zu-he-zong-he-ii-by-alexer-660/',\n        'https://www.jiuzhang.com/solution/combination-sum-ii/'\n    ],\n    level: 'Easy',\n    tag: [],\n    notes: ``,\n    jsSolution: `\n        // Given an array num and a number target. Find all unique combinations in num where the numbers sum to target.\n\n        // 在线评测地址: https://www.lintcode.com/problem/combination-sum-ii/\n\n        const combinationSum2 = function(num, target) {\n            let n = num.length;\n            let res = [];\n            let tmpPath = [];\n            num = num.sort((a,b) => {return a - b})\n            let backtrack = (tmpPath,target,start) => {\n                if(target == 0){\n                    res.push(tmpPath);\n                    return;\n                }\n                for(let i = start;i < n;i++){\n                    if(target < num[i]) break;\n                    if(i > start && num[i-1] == num[i]) continue;\n                    tmpPath.push(num[i]);\n                    backtrack(tmpPath.slice(),target - num[i],i + 1);\n                    tmpPath.pop();\n                }\n            }\n            backtrack(tmpPath,target,0);\n            return res;\n        };\n    `\n}\n\nexport default Combination_Sum_II\n"]},"metadata":{},"sourceType":"module"}