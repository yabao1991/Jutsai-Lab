{"ast":null,"code":"var _jsxFileName = \"/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/clock/clock/Clock.js\";\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport DigitalCard from './DigitalCard';\nimport './clock.scss';\n\nfunction Clock() {\n  const setInitialNumber = useCallback(digitalCardArr => {\n    const nowTimeStr = getFormattedDate(new Date(new Date().getTime()), 'hhiiss');\n\n    for (let i = 0; i < digitalCardArr.length; i++) {\n      digitalCardArr[i].current.setFront(nowTimeStr[i]);\n    }\n  }, []);\n  const setTimer = useCallback(digitalCardArr => {\n    setInterval(() => {\n      let current = new Date();\n      let currentTimeStr = getFormattedDate(new Date(current.getTime() - 1000), 'hhiiss');\n      let nextTimeStr = getFormattedDate(current, 'hhiiss');\n\n      for (let i = 0; i < digitalCardArr.length; i++) {\n        if (currentTimeStr[i] === nextTimeStr[i]) {\n          continue;\n        }\n\n        digitalCardArr[i].current.setNextDigitalCard('down', currentTimeStr[i], nextTimeStr[i]);\n      }\n    }, 1000);\n  }, []);\n  const digitalHour1 = useRef();\n  const digitalHour2 = useRef();\n  const digitalMinute1 = useRef();\n  const digitalMinute2 = useRef();\n  const digitalSecond1 = useRef();\n  const digitalSecond2 = useRef();\n  useEffect(() => {\n    const digitalCardArr = [digitalHour1, digitalHour2, digitalMinute1, digitalMinute2, digitalSecond1, digitalSecond2];\n    setInitialNumber(digitalCardArr);\n    setTimer(digitalCardArr);\n  }, [setInitialNumber, setTimer]);\n\n  const getFormattedDate = (date, dateFormat) => {\n    if (/(y+)/.test(dateFormat)) {\n      dateFormat = dateFormat.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    }\n\n    const o = {\n      'm+': date.getMonth() + 1,\n      'd+': date.getDate(),\n      'h+': date.getHours(),\n      'i+': date.getMinutes(),\n      's+': date.getSeconds()\n    };\n\n    for (let k in o) {\n      if (new RegExp(`(${k})`).test(dateFormat)) {\n        let str = o[k] + '';\n        dateFormat = dateFormat.replace(RegExp.$1, RegExp.$1.length === 1 ? str : ('00' + str).substr(str.length));\n      }\n    }\n\n    return dateFormat;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DigitalCard, {\n    ref: digitalHour1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DigitalCard, {\n    ref: digitalHour2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(DigitalCard, {\n    ref: digitalMinute1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DigitalCard, {\n    ref: digitalMinute2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(DigitalCard, {\n    ref: digitalSecond1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DigitalCard, {\n    ref: digitalSecond2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Clock;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/clock/clock/Clock.js"],"names":["React","useEffect","useCallback","useRef","DigitalCard","Clock","setInitialNumber","digitalCardArr","nowTimeStr","getFormattedDate","Date","getTime","i","length","current","setFront","setTimer","setInterval","currentTimeStr","nextTimeStr","setNextDigitalCard","digitalHour1","digitalHour2","digitalMinute1","digitalMinute2","digitalSecond1","digitalSecond2","date","dateFormat","test","replace","RegExp","$1","getFullYear","substr","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport DigitalCard from './DigitalCard'\nimport './clock.scss'\n\nfunction Clock() {\n    const setInitialNumber =  useCallback(digitalCardArr => {\n        const nowTimeStr = getFormattedDate(new Date(new Date().getTime()), 'hhiiss')\n        for (let i = 0; i < digitalCardArr.length; i++) {\n            digitalCardArr[i].current.setFront(nowTimeStr[i])\n        }\n    }, [])\n\n    const setTimer = useCallback(digitalCardArr => {\n        setInterval(() => {\n            let current = new Date()\n            let currentTimeStr = getFormattedDate(new Date(current.getTime() - 1000), 'hhiiss')\n            let nextTimeStr = getFormattedDate(current, 'hhiiss')\n            for (let i = 0; i < digitalCardArr.length; i++) {\n                if (currentTimeStr[i] === nextTimeStr[i]) {\n                    continue\n                }\n                digitalCardArr[i].current.setNextDigitalCard(\n                    'down',\n                    currentTimeStr[i],\n                    nextTimeStr[i]\n                )\n            }\n        }, 1000)\n    }, [])\n\n    const digitalHour1 = useRef();\n    const digitalHour2 = useRef();\n\n    const digitalMinute1 = useRef();\n    const digitalMinute2 = useRef();\n\n    const digitalSecond1 = useRef();\n    const digitalSecond2 = useRef();\n\n    useEffect(() => {\n        const digitalCardArr = [\n            digitalHour1,\n            digitalHour2,\n            digitalMinute1,\n            digitalMinute2,\n            digitalSecond1,\n            digitalSecond2\n        ]\n        setInitialNumber(digitalCardArr)\n        setTimer(digitalCardArr)\n    }, [setInitialNumber, setTimer]);\n\n    const getFormattedDate = (date, dateFormat) => {\n        if (/(y+)/.test(dateFormat)) {\n            dateFormat = dateFormat.replace(\n                RegExp.$1,\n                (date.getFullYear() + '').substr(4 - RegExp.$1.length)\n            )\n        }\n        const o = {\n            'm+': date.getMonth() + 1,\n            'd+': date.getDate(),\n            'h+': date.getHours(),\n            'i+': date.getMinutes(),\n            's+': date.getSeconds()\n        }\n        for (let k in o) {\n            if (new RegExp(`(${k})`).test(dateFormat)) {\n                let str = o[k] + ''\n                dateFormat = dateFormat.replace(\n                    RegExp.$1,\n                    RegExp.$1.length === 1 ? str : ('00' + str).substr(str.length)\n                )\n            }\n        }\n        return dateFormat\n    }\n\n    return (\n        <div className=\"clock\">\n            <DigitalCard ref={digitalHour1} />\n            <DigitalCard ref={digitalHour2} />\n            <em>:</em>\n            <DigitalCard ref={digitalMinute1} />\n            <DigitalCard ref={digitalMinute2} />\n            <em>:</em>\n            <DigitalCard ref={digitalSecond1} />\n            <DigitalCard ref={digitalSecond2} />\n        </div>\n    )\n}\n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}