{"ast":null,"code":"import React from'react';import{Card,Carousel,Comment,Tag,List}from'antd';import{UserOutlined,LinkOutlined}from'@ant-design/icons';import'./index.scss';var PostDetails=function PostDetails(props){var data=props.data,userPostData=props.userPostData;var title=data.title,author=data.author,url=data.url,selftext=data.selftext,preview=data.preview,thumbnail=data.thumbnail;var imgUrl=preview?preview.images[0].source.url:'';var getPostViaAuthorApi=\"https://www.reddit.com/user/\".concat(author,\".json\");var listData=[];for(var i=0;i<userPostData.length;i++){listData.push({href:userPostData[i].url||userPostData[i].link_permalink,title:userPostData[i].title||userPostData[i].link_title,avatar:'',link_url:userPostData[i].link_url});}return/*#__PURE__*/React.createElement(Card,{cover:/*#__PURE__*/React.createElement(Carousel,{effect:\"fade\"},/*#__PURE__*/React.createElement(\"img\",{alt:\"thumbnail\",src:thumbnail||'https://servicechannel.com/wp-content/uploads/2020/01/2020-home-hero-image-rev.png'}),imgUrl&&/*#__PURE__*/React.createElement(\"img\",{alt:\"preImg Forbidden 403\",src:imgUrl}))},!author&&/*#__PURE__*/React.createElement(\"div\",null,\"Please go through step 1 _> step 2,  then you'll see the post info here\"),author&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:\"postTitle\"},title),/*#__PURE__*/React.createElement(Comment,{author:/*#__PURE__*/React.createElement(Tag,{color:\"success\"},\"Author: \",author),avatar:/*#__PURE__*/React.createElement(UserOutlined,null),content:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LinkOutlined,null),\"Current Link:\",/*#__PURE__*/React.createElement(\"a\",{target:\"_blank\",rel:\"noopener noreferrer\",href:url},url),/*#__PURE__*/React.createElement(\"p\",null,selftext?selftext:'(NO text)'))}),/*#__PURE__*/React.createElement(\"h5\",null,\"Author posts list:(\",/*#__PURE__*/React.createElement(\"a\",{target:\"_blank\",rel:\"noopener noreferrer\",href:getPostViaAuthorApi},getPostViaAuthorApi),\")\"),/*#__PURE__*/React.createElement(List,{itemLayout:\"vertical\",size:\"large\",pagination:{onChange:function onChange(page){console.log(page);},pageSize:6},dataSource:listData,renderItem:function renderItem(item,index){return/*#__PURE__*/React.createElement(List.Item,{key:item.title},/*#__PURE__*/React.createElement(List.Item.Meta,{title:/*#__PURE__*/React.createElement(\"a\",{target:\"_blank\",rel:\"noopener noreferrer\",href:item.href},item.title)// description={item.description}\n}));}})));};export default PostDetails;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/RedditBrowserApp/pages/components/PostDetails/index.js"],"names":["React","Card","Carousel","Comment","Tag","List","UserOutlined","LinkOutlined","PostDetails","props","data","userPostData","title","author","url","selftext","preview","thumbnail","imgUrl","images","source","getPostViaAuthorApi","listData","i","length","push","href","link_permalink","link_title","avatar","link_url","onChange","page","console","log","pageSize","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Carousel, Comment, Tag, List } from 'antd';\nimport { UserOutlined, LinkOutlined } from '@ant-design/icons';\nimport './index.scss'\n\nconst PostDetails = (props) => {\n    const { data, userPostData } = props\n    const {title, author, url, selftext, preview, thumbnail } = data\n\n    const imgUrl = preview ? preview.images[0].source.url : ''\n    const getPostViaAuthorApi = `https://www.reddit.com/user/${author}.json`\n\n    const listData = [];\n    for (let i = 0; i < userPostData.length; i++) {\n        listData.push({\n            href: userPostData[i].url || userPostData[i].link_permalink,\n            title: userPostData[i].title || userPostData[i].link_title,\n            avatar: '',\n            link_url: userPostData[i].link_url,\n        });\n    }\n\n    return (\n        <Card\n            cover={\n                <Carousel effect=\"fade\">\n                    <img\n                        alt=\"thumbnail\"\n                        src={thumbnail || 'https://servicechannel.com/wp-content/uploads/2020/01/2020-home-hero-image-rev.png'}\n                    />\n                    {imgUrl && <img\n                        alt=\"preImg Forbidden 403\"\n                        src={imgUrl}\n                    />}\n                </Carousel>\n            }\n        >\n            {!author && <div>Please go through step 1 _> step 2,  then you'll see the post info here</div>}\n            {author && (\n                <>\n                    <p className=\"postTitle\">{title}</p>\n                    <Comment\n                        author={<Tag color=\"success\">Author: {author}</Tag>}\n                        avatar={<UserOutlined />}\n                        content={\n                            <>\n                                <LinkOutlined />Current Link:<a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{url}</a>\n                                <p>{selftext ? selftext : '(NO text)'}</p>\n                            </>\n                        }\n                    />\n                    <h5>Author posts list:(<a target=\"_blank\" rel=\"noopener noreferrer\" href={getPostViaAuthorApi}>{getPostViaAuthorApi}</a>)</h5>\n                    <List\n                        itemLayout=\"vertical\"\n                        size=\"large\"\n                        pagination={{\n                        onChange: page => {\n                            console.log(page);\n                        },\n                        pageSize: 6,\n                        }}\n                        dataSource={listData}\n                        renderItem={(item, index) => (\n                            <List.Item\n                                key={item.title}\n                            >\n                                <List.Item.Meta\n                                    title={<a target=\"_blank\" rel=\"noopener noreferrer\" href={item.href}>{item.title}</a>}\n                                    // description={item.description}\n                                />\n                                {/* {item.content} */}\n                            </List.Item>\n                        )}\n                    />\n                </>\n            )}\n        </Card>\n    );\n}\n\nexport default PostDetails"]},"metadata":{},"sourceType":"module"}