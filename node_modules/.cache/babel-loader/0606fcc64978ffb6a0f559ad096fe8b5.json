{"ast":null,"code":"// action creator\nexport function createSet(payload) {\n  return {\n    type: 'set',\n    payload\n  };\n}\nlet idSeq = Date.now();\nexport function createAdd(text) {\n  // return {\n  //     type: 'add',\n  //     payload\n  // }\n  return (dispatch, getState) => {\n    setTimeout(() => {\n      const {\n        todos\n      } = getState();\n\n      if (!todos.find(todo => todo.text === text)) {\n        dispatch({\n          type: 'add',\n          payload: {\n            id: ++idSeq,\n            text,\n            complete: false\n          }\n        });\n      }\n    }, 500);\n  };\n}\nexport function createRemove(payload) {\n  return {\n    type: 'remove',\n    payload\n  };\n}\nexport function createToggle(payload) {\n  return {\n    type: 'toggle',\n    payload\n  };\n}","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/TodoList/pages/actions.js"],"names":["createSet","payload","type","idSeq","Date","now","createAdd","text","dispatch","getState","setTimeout","todos","find","todo","id","complete","createRemove","createToggle"],"mappings":"AAAA;AACA,OAAO,SAASA,SAAT,CAAmBC,OAAnB,EAA4B;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAE,KADH;AAEHD,IAAAA;AAFG,GAAP;AAIH;AAED,IAAIE,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B;AACA;AACA;AACA;AACA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BC,IAAAA,UAAU,CAAC,MAAM;AACb,YAAM;AAAEC,QAAAA;AAAF,UAAaF,QAAQ,EAA3B;;AACA,UAAI,CAACE,KAAK,CAACC,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACN,IAAL,KAAcA,IAAjC,CAAL,EAA6C;AACzCC,QAAAA,QAAQ,CAAC;AACLN,UAAAA,IAAI,EAAE,KADD;AAELD,UAAAA,OAAO,EAAE;AACLa,YAAAA,EAAE,EAAE,EAAEX,KADD;AAELI,YAAAA,IAFK;AAGLQ,YAAAA,QAAQ,EAAE;AAHL;AAFJ,SAAD,CAAR;AAQH;AACJ,KAZS,EAYP,GAZO,CAAV;AAcH,GAfD;AAgBH;AAED,OAAO,SAASC,YAAT,CAAsBf,OAAtB,EAA+B;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASgB,YAAT,CAAsBhB,OAAtB,EAA+B;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["// action creator\nexport function createSet(payload) {\n    return {\n        type: 'set',\n        payload\n    }\n}\n\nlet idSeq = Date.now()\n\nexport function createAdd(text) {\n    // return {\n    //     type: 'add',\n    //     payload\n    // }\n    return (dispatch, getState) => {\n        setTimeout(() => {\n            const { todos, } = getState()\n            if (!todos.find(todo => todo.text === text)) {\n                dispatch({\n                    type: 'add',\n                    payload: {\n                        id: ++idSeq,\n                        text,\n                        complete: false\n                    }\n                })\n            }\n        }, 500)\n        \n    };\n}\n\nexport function createRemove(payload) {\n    return {\n        type: 'remove',\n        payload\n    }\n}\n\nexport function createToggle(payload) {\n    return {\n        type: 'toggle',\n        payload\n    }\n}"]},"metadata":{},"sourceType":"module"}