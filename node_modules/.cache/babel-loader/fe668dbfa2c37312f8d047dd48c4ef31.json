{"ast":null,"code":"const _3Sum_Closest = {\n  id: '0057',\n  name: '_3Sum_Closest',\n  refLink: ['https://www.jiuzhang.com/solution/3sum-closest/', 'https://www.lintcode.com/problem/3sum-closest/description', 'https://leetcode-cn.com/problems/3sum-closest/solution/16-zui-jie-jin-de-san-shu-zhi-he-by-alexer-660/'],\n  level: 'Medium',\n  tag: [],\n  notes: ``,\n  jsSolution: `\n        // Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers.\n\n        // 在线评测地址: https://www.lintcode.com/problem/3sum-closest/\n        \n        /**\n         * @param numbers: Give an array numbers of n integer\n         * @param target: An integer\n         * @return: return the sum of the three integers, the sum closest target.\n         */\n\n        const threeSumClosest = function(numbers, target) {\n            numbers.sort((a,b) => a - b);\n            let res = numbers[0] + numbers[1] + numbers[2];\n            let n = numbers.length;\n            for(let i = 0;i < n;i++){\n                let left = i + 1;\n                let right = n - 1;\n                while(left < right){\n                    let sum = numbers[i] + numbers[left] + numbers[right];\n                    if(Math.abs(res - target) > Math.abs(sum - target)){\n                        res = sum;\n                    }else if(sum > target){\n                        right--;\n                    }else if(sum < target){\n                        left++;\n                    }else if(sum === target){\n                        return res;\n                    }\n                }\n            }\n            return res;\n        };\n    `\n};\nexport default _3Sum_Closest;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Two_Pointers/_3Sum_Closest.js"],"names":["_3Sum_Closest","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,EAAE,EAAE,MADc;AAElBC,EAAAA,IAAI,EAAE,eAFY;AAGlBC,EAAAA,OAAO,EAAE,CACL,iDADK,EAEL,2DAFK,EAGL,wGAHK,CAHS;AAQlBC,EAAAA,KAAK,EAAE,QARW;AASlBC,EAAAA,GAAG,EAAE,EATa;AAUlBC,EAAAA,KAAK,EAAG,EAVU;AAWlBC,EAAAA,UAAU,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXK,CAAtB;AA+CA,eAAeP,aAAf","sourcesContent":["const _3Sum_Closest = {\n    id: '0057',\n    name: '_3Sum_Closest', \n    refLink: [\n        'https://www.jiuzhang.com/solution/3sum-closest/',\n        'https://www.lintcode.com/problem/3sum-closest/description',\n        'https://leetcode-cn.com/problems/3sum-closest/solution/16-zui-jie-jin-de-san-shu-zhi-he-by-alexer-660/'\n    ],\n    level: 'Medium',\n    tag: [],\n    notes: ``,\n    jsSolution: `\n        // Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers.\n\n        // 在线评测地址: https://www.lintcode.com/problem/3sum-closest/\n        \n        /**\n         * @param numbers: Give an array numbers of n integer\n         * @param target: An integer\n         * @return: return the sum of the three integers, the sum closest target.\n         */\n\n        const threeSumClosest = function(numbers, target) {\n            numbers.sort((a,b) => a - b);\n            let res = numbers[0] + numbers[1] + numbers[2];\n            let n = numbers.length;\n            for(let i = 0;i < n;i++){\n                let left = i + 1;\n                let right = n - 1;\n                while(left < right){\n                    let sum = numbers[i] + numbers[left] + numbers[right];\n                    if(Math.abs(res - target) > Math.abs(sum - target)){\n                        res = sum;\n                    }else if(sum > target){\n                        right--;\n                    }else if(sum < target){\n                        left++;\n                    }else if(sum === target){\n                        return res;\n                    }\n                }\n            }\n            return res;\n        };\n    `\n}\n\nexport default _3Sum_Closest\n"]},"metadata":{},"sourceType":"module"}