{"ast":null,"code":"var Find_Minimum_in_Rotated_Sorted_Array={id:'0006',name:'Find_Minimum_in_Rotated_Sorted_Array',refLink:['https://www.jiuzhang.com/solution/find-minimum-in-rotated-sorted-array/','https://www.lintcode.com/problem/find-minimum-in-rotated-sorted-array/description','https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/js-er-fen-cha-zhao-by-ignore_express/'],level:'Easy',tag:['Binary Search'],notes:\"\",jsSolution:\"\\n        // Suppose a sorted array in ascending order is rotated at some pivot unknown to you beforehand.\\n\\n        // (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\\n        \\n        // Find the minimum element.\\n        \\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/find-minimum-in-rotated-sorted-array/\\n\\n        /**\\n         * @param nums: a rotated sorted array\\n         * @return: the minimum number in the array\\n         */\\n        const findMin = function (nums) {\\n            let low = 0,\\n            high = nums.length - 1,\\n            ans = Infinity;\\n        \\n            while (low <= high) {\\n                let mid = low + Math.floor((high - low) / 2);\\n                if (nums[low] <= nums[mid]) {\\n                    ans = Math.min(ans, nums[low]);\\n                    low = mid + 1;\\n                } else {\\n                    ans = Math.min(ans, nums[mid]);\\n                    high = mid - 1;\\n                }\\n            }\\n            return ans;\\n        }\\n    \"};export default Find_Minimum_in_Rotated_Sorted_Array;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/Find_Minimum_in_Rotated_Sorted_Array.js"],"names":["Find_Minimum_in_Rotated_Sorted_Array","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,oCAAoC,CAAG,CACzCC,EAAE,CAAE,MADqC,CAEzCC,IAAI,CAAE,sCAFmC,CAGzCC,OAAO,CAAE,CACL,yEADK,CAEL,mFAFK,CAGL,sHAHK,CAHgC,CAQzCC,KAAK,CAAE,MARkC,CASzCC,GAAG,CAAE,CACD,eADC,CAToC,CAYzCC,KAAK,GAZoC,CAazCC,UAAU,4hCAb+B,CAA7C,CA8CA,cAAeP,CAAAA,oCAAf","sourcesContent":["const Find_Minimum_in_Rotated_Sorted_Array = {\n    id: '0006',\n    name: 'Find_Minimum_in_Rotated_Sorted_Array',\n    refLink: [\n        'https://www.jiuzhang.com/solution/find-minimum-in-rotated-sorted-array/',\n        'https://www.lintcode.com/problem/find-minimum-in-rotated-sorted-array/description',\n        'https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/solution/js-er-fen-cha-zhao-by-ignore_express/'\n    ],\n    level: 'Easy',\n    tag: [\n        'Binary Search',\n    ],\n    notes: ``,\n    jsSolution: `\n        // Suppose a sorted array in ascending order is rotated at some pivot unknown to you beforehand.\n\n        // (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).\n        \n        // Find the minimum element.\n        \n        // 在线评测地址: https://www.lintcode.com/problem/find-minimum-in-rotated-sorted-array/\n\n        /**\n         * @param nums: a rotated sorted array\n         * @return: the minimum number in the array\n         */\n        const findMin = function (nums) {\n            let low = 0,\n            high = nums.length - 1,\n            ans = Infinity;\n        \n            while (low <= high) {\n                let mid = low + Math.floor((high - low) / 2);\n                if (nums[low] <= nums[mid]) {\n                    ans = Math.min(ans, nums[low]);\n                    low = mid + 1;\n                } else {\n                    ans = Math.min(ans, nums[mid]);\n                    high = mid - 1;\n                }\n            }\n            return ans;\n        }\n    `,\n}\n\nexport default Find_Minimum_in_Rotated_Sorted_Array"]},"metadata":{},"sourceType":"module"}