{"ast":null,"code":"const Lowest_Common_Ancestor_of_a_Binary_Tree = {\n  id: '0022',\n  name: 'Lowest_Common_Ancestor_of_a_Binary_Tree',\n  refLink: ['https://leetcode-cn.com/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/solution/chao-jian-dan-di-gui-pythonjavascript-by-azl397985/', 'https://www.lintcode.com/problem/lowest-common-ancestor-of-a-binary-tree/description', 'https://www.lintcode.com/problem/lowest-common-ancestor-of-a-binary-tree/description'],\n  level: 'Easy',\n  tag: [],\n  notes: ``,\n  jsSolution: `\n        // Given a binary tree, find the subtree with maximum average. Return the root of the subtree.\n\n        // 在线评测地址: https://www.lintcode.com/problem/subtree-with-maximum-average/\n\n        // 复杂度分析\n\n        // 时间复杂度：O(N)O(N)\n        // 空间复杂度：O(N)O(N)\n\n        var lowestCommonAncestor = function(root, p, q) {\n            if (!root || root === p || root === q) return root;\n            const left = lowestCommonAncestor(root.left, p, q);\n            const right = lowestCommonAncestor(root.right, p, q);\n            if (!left) return right; // 左子树找不到，返回右子树\n            if (!right) return left; // 右子树找不到，返回左子树\n            return root;\n        };\n    `\n};\nexport default Lowest_Common_Ancestor_of_a_Binary_Tree;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Tree_Divide_Conquer/Lowest_Common_Ancestor_of_a_Binary_Tree.js"],"names":["Lowest_Common_Ancestor_of_a_Binary_Tree","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,MAAMA,uCAAuC,GAAG;AAC5CC,EAAAA,EAAE,EAAE,MADwC;AAE5CC,EAAAA,IAAI,EAAE,yCAFsC;AAG5CC,EAAAA,OAAO,EAAE,CACL,4IADK,EAEL,sFAFK,EAGL,sFAHK,CAHmC;AAQ5CC,EAAAA,KAAK,EAAE,MARqC;AAS5CC,EAAAA,GAAG,EAAE,EATuC;AAU5CC,EAAAA,KAAK,EAAG,EAVoC;AAW5CC,EAAAA,UAAU,EAAG;;;;;;;;;;;;;;;;;;;AAX+B,CAAhD;AAgCA,eAAeP,uCAAf","sourcesContent":["const Lowest_Common_Ancestor_of_a_Binary_Tree = {\n    id: '0022',\n    name: 'Lowest_Common_Ancestor_of_a_Binary_Tree',\n    refLink: [\n        'https://leetcode-cn.com/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/solution/chao-jian-dan-di-gui-pythonjavascript-by-azl397985/',\n        'https://www.lintcode.com/problem/lowest-common-ancestor-of-a-binary-tree/description',\n        'https://www.lintcode.com/problem/lowest-common-ancestor-of-a-binary-tree/description'\n    ],\n    level: 'Easy',\n    tag: [],\n    notes: ``,\n    jsSolution: `\n        // Given a binary tree, find the subtree with maximum average. Return the root of the subtree.\n\n        // 在线评测地址: https://www.lintcode.com/problem/subtree-with-maximum-average/\n\n        // 复杂度分析\n\n        // 时间复杂度：O(N)O(N)\n        // 空间复杂度：O(N)O(N)\n\n        var lowestCommonAncestor = function(root, p, q) {\n            if (!root || root === p || root === q) return root;\n            const left = lowestCommonAncestor(root.left, p, q);\n            const right = lowestCommonAncestor(root.right, p, q);\n            if (!left) return right; // 左子树找不到，返回右子树\n            if (!right) return left; // 右子树找不到，返回左子树\n            return root;\n        };\n    `\n}\n\nexport default Lowest_Common_Ancestor_of_a_Binary_Tree\n"]},"metadata":{},"sourceType":"module"}