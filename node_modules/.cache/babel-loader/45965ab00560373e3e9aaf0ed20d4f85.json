{"ast":null,"code":"var _jsxFileName = \"/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/components/LineChart/MobileChart.js\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { Spin } from 'antd';\nimport { connect } from \"react-redux\";\nimport './LineChart.scss';\n\nconst Chart = props => {\n  const {\n    salesData\n  } = props;\n  const {\n    data\n  } = salesData;\n  const {\n    chartSalesDataArr\n  } = data;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"chartTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Retail Sales\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: 400,\n      background: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, chartSalesDataArr ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: chartSalesDataArr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    yAxisId: \"left\",\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    yAxisId: \"right\",\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    yAxisId: \"left\",\n    type: \"monotone\",\n    dataKey: \"retailSales\",\n    stroke: \"#61A6F0\",\n    strokeWidth: 4,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    yAxisId: \"right\",\n    type: \"monotone\",\n    dataKey: \"wholesaleSales\",\n    stroke: \"#9DA6BD\",\n    strokeWidth: 4,\n    dot: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Spin, {\n    className: \"spinWrap_chart\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  salesData: state.salesData\n});\n\nexport default connect(mapStateToProps)(Chart);","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/components/LineChart/MobileChart.js"],"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","Spin","connect","Chart","props","salesData","data","chartSalesDataArr","width","height","background","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,mBANF,QAOO,UAPP;AAQA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWD,SAAjB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAwBD,IAA9B;AAEA,sBACE,uDACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,GAAzB;AAA8BC,MAAAA,UAAU,EAAE;AAA1C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,iBAAiB,gBAChB,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEA,iBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,IAAI,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,IAAI,EAAE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAC,aAHV;AAIE,IAAA,MAAM,EAAC,SAJT;AAKE,IAAA,WAAW,EAAE,CALf;AAME,IAAA,GAAG,EAAE,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAeE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAC,gBAHV;AAIE,IAAA,MAAM,EAAC,SAJT;AAKE,IAAA,WAAW,EAAE,CALf;AAME,IAAA,GAAG,EAAE,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADgB,gBA2Bd,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BN,CAFF,CADF;AAmCD,CAxCD;;AA0CA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,SAAS,EAAEO,KAAK,CAACP;AADe,CAAL,CAA7B;;AAIA,eAAeH,OAAO,CACpBS,eADoB,CAAP,CAEbR,KAFa,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport { Spin } from 'antd';\nimport { connect } from \"react-redux\";\nimport './LineChart.scss'\n\nconst Chart = (props) => {\n  const { salesData } = props\n  const { data } = salesData\n  const { chartSalesDataArr } = data\n\n  return (\n    <>\n      <p className=\"chartTitle\">Retail Sales</p>\n      <div style={{ width: '100%', height: 400, background: '#fff' }}>\n        {chartSalesDataArr ?  (\n          <ResponsiveContainer>\n            <LineChart\n              data={chartSalesDataArr}\n            >\n              <XAxis dataKey=\"month\"/>\n              <YAxis yAxisId=\"left\" hide={true}/>\n              <YAxis yAxisId=\"right\" hide={true}/>\n              <Tooltip />\n              <Line\n                yAxisId=\"left\"\n                type=\"monotone\"\n                dataKey=\"retailSales\"\n                stroke=\"#61A6F0\"\n                strokeWidth={4}\n                dot={false}\n              />\n              <Line\n                yAxisId=\"right\"\n                type=\"monotone\"\n                dataKey=\"wholesaleSales\"\n                stroke=\"#9DA6BD\"\n                strokeWidth={4}\n                dot={false}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        ) : <Spin className=\"spinWrap_chart\" size=\"large\" />}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  salesData: state.salesData\n});\n\nexport default connect(\n  mapStateToProps,\n)(Chart);\n"]},"metadata":{},"sourceType":"module"}