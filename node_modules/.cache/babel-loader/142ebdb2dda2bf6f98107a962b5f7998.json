{"ast":null,"code":"const last_position_of_target = {\n  id: '0010',\n  name: 'last_position_of_target',\n  refLink: ['https://www.lintcode.com/problem/last-position-of-target/'],\n  level: 'Easy',\n  tag: ['Binary Search'],\n  notes: `可提交，不能过所有test`,\n  jsSolution: `\n        // Find the last position of a target number in a sorted array. Return -1 if target does not exist.\n\n        // 在线评测地址: https://www.lintcode.com/problem/last-position-of-target/\n\n        /**\n         * @param nums: An integer array sorted in ascending order\n         * @param target: An integer\n         * @return: An integer\n         */\n        const lastPosition = function (nums, target) {\n            \n            // write your code here\n            let left = 0;\n            let right = nums.length;\n            while(left < right){\n                let mid = (left + right) >> 1;\n                if(nums[mid] == target){\n                    left = mid + 1; \n                }else if(nums[mid] < target){\n                    left = mid + 1;\n                }else if(nums[mid] > target){\n                    right = mid;\n                }\n            }\n            left = left - 1\n            return left\n        }\n    `\n};\nexport default last_position_of_target;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/last_position_of_target.js"],"names":["last_position_of_target","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,MAAMA,uBAAuB,GAAG;AAC5BC,EAAAA,EAAE,EAAE,MADwB;AAE5BC,EAAAA,IAAI,EAAE,yBAFsB;AAG5BC,EAAAA,OAAO,EAAE,CACL,2DADK,CAHmB;AAM5BC,EAAAA,KAAK,EAAE,MANqB;AAO5BC,EAAAA,GAAG,EAAE,CACD,eADC,CAPuB;AAU5BC,EAAAA,KAAK,EAAG,eAVoB;AAW5BC,EAAAA,UAAU,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXe,CAAhC;AA0CA,eAAeP,uBAAf","sourcesContent":["const last_position_of_target = {\n    id: '0010',\n    name: 'last_position_of_target',\n    refLink: [\n        'https://www.lintcode.com/problem/last-position-of-target/',\n    ],\n    level: 'Easy',\n    tag: [\n        'Binary Search',\n    ],\n    notes: `可提交，不能过所有test`,\n    jsSolution: `\n        // Find the last position of a target number in a sorted array. Return -1 if target does not exist.\n\n        // 在线评测地址: https://www.lintcode.com/problem/last-position-of-target/\n\n        /**\n         * @param nums: An integer array sorted in ascending order\n         * @param target: An integer\n         * @return: An integer\n         */\n        const lastPosition = function (nums, target) {\n            \n            // write your code here\n            let left = 0;\n            let right = nums.length;\n            while(left < right){\n                let mid = (left + right) >> 1;\n                if(nums[mid] == target){\n                    left = mid + 1; \n                }else if(nums[mid] < target){\n                    left = mid + 1;\n                }else if(nums[mid] > target){\n                    right = mid;\n                }\n            }\n            left = left - 1\n            return left\n        }\n    `,\n}\n\nexport default last_position_of_target"]},"metadata":{},"sourceType":"module"}