{"ast":null,"code":"var Subarray_Sum={id:'0050',name:'Subarray_Sum ',refLink:['https://www.jiuzhang.com/solution/subarray-sum/#tag-highlight','https://www.lintcode.com/problem/subarray-sum/description'],level:'Hard',tag:[],notes:\"JAVA only\",jsSolution:\"\\n        // Given an integer array, find a subarray where the sum of numbers is zero. Your code should return the index of the first number and the index of the last number.\\n\\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/subarray-sum/\\n        \\n        /**\\n         * @param nums: A list of integers\\n         * @return: A list of integers includes the index of the first number\\n         *          and the index of the last number\\n         */\\n        public ArrayList<Integer> subarraySum(int[] nums) {\\n            // write your code here\\n           \\n            int len = nums.length;\\n           \\n            ArrayList<Integer> ans = new ArrayList<Integer>();\\n            HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\\n           \\n            map.put(0, -1);\\n           \\n            int sum = 0;\\n            for (int i = 0; i < len; i++) {\\n                sum += nums[i];\\n               \\n                if (map.containsKey(sum)) {\\n                    ans.add(map.get(sum) + 1);\\n                    ans.add(i);\\n                    return ans;\\n                }\\n                \\n                map.put(sum, i);\\n            }\\n           \\n            return ans;\\n        }\\n    }\\n    \"};export default Subarray_Sum;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Linked_List_Array/Subarray_Sum.js"],"names":["Subarray_Sum","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,YAAY,CAAI,CAClBC,EAAE,CAAE,MADc,CAElBC,IAAI,CAAE,eAFY,CAGlBC,OAAO,CAAE,CACL,+DADK,CAEL,2DAFK,CAHS,CAQlBC,KAAK,CAAE,MARW,CASlBC,GAAG,CAAE,EATa,CAUlBC,KAAK,YAVa,CAWlBC,UAAU,0vCAXQ,CAAtB,CAkDA,cAAeP,CAAAA,YAAf","sourcesContent":["const Subarray_Sum  = {\n    id: '0050',\n    name: 'Subarray_Sum ', \n    refLink: [\n        'https://www.jiuzhang.com/solution/subarray-sum/#tag-highlight',\n        'https://www.lintcode.com/problem/subarray-sum/description'\n\n    ],\n    level: 'Hard',\n    tag: [],\n    notes: `JAVA only`,\n    jsSolution: `\n        // Given an integer array, find a subarray where the sum of numbers is zero. Your code should return the index of the first number and the index of the last number.\n\n        // 在线评测地址: https://www.lintcode.com/problem/subarray-sum/\n        \n        /**\n         * @param nums: A list of integers\n         * @return: A list of integers includes the index of the first number\n         *          and the index of the last number\n         */\n        public ArrayList<Integer> subarraySum(int[] nums) {\n            // write your code here\n           \n            int len = nums.length;\n           \n            ArrayList<Integer> ans = new ArrayList<Integer>();\n            HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n           \n            map.put(0, -1);\n           \n            int sum = 0;\n            for (int i = 0; i < len; i++) {\n                sum += nums[i];\n               \n                if (map.containsKey(sum)) {\n                    ans.add(map.get(sum) + 1);\n                    ans.add(i);\n                    return ans;\n                }\n                \n                map.put(sum, i);\n            }\n           \n            return ans;\n        }\n    }\n    `\n}\n\nexport default Subarray_Sum \n"]},"metadata":{},"sourceType":"module"}