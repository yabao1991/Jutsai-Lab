{"ast":null,"code":"var _jsxFileName = \"/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/RedditBrowserApp/pages/components/PostDetails/index.js\";\nimport React from 'react';\nimport { Card, Carousel, Comment, Tag, List } from 'antd';\nimport { UserOutlined, LinkOutlined } from '@ant-design/icons';\nimport './index.scss';\n\nconst PostDetails = props => {\n  const {\n    data,\n    userPostData\n  } = props;\n  const {\n    title,\n    author,\n    url,\n    selftext,\n    preview,\n    thumbnail\n  } = data;\n  const imgUrl = preview ? preview.images[0].source.url : '';\n  const getPostViaAuthorApi = `https://www.reddit.com/user/${author}.json`;\n  const listData = [];\n\n  for (let i = 0; i < userPostData.length; i++) {\n    listData.push({\n      href: userPostData[i].url || userPostData[i].link_permalink,\n      title: userPostData[i].title || userPostData[i].link_title,\n      avatar: '',\n      link_url: userPostData[i].link_url\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    cover: /*#__PURE__*/React.createElement(Carousel, {\n      effect: \"fade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"thumbnail\",\n      src: thumbnail || 'https://servicechannel.com/wp-content/uploads/2020/01/2020-home-hero-image-rev.png',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), imgUrl && /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"preImg Forbidden 403\",\n      src: imgUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, !author && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Please go through step 1 _> step 2,  then you'll see the post info here\"), author && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(Comment, {\n    author: /*#__PURE__*/React.createElement(Tag, {\n      color: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, \"Author: \", author),\n    avatar: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LinkOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }), \"Current Link:\", /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 62\n      }\n    }, url), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, selftext ? selftext : '(NO text)')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Author posts list:(\", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: getPostViaAuthorApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }\n  }, getPostViaAuthorApi), \")\"), /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"vertical\",\n    size: \"large\",\n    pagination: {\n      onChange: page => {\n        console.log(page);\n      },\n      pageSize: 6\n    },\n    dataSource: listData,\n    renderItem: (item, index) => /*#__PURE__*/React.createElement(List.Item, {\n      key: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: item.href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 44\n        }\n      }, item.title) // description={item.description}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default PostDetails;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/RedditBrowserApp/pages/components/PostDetails/index.js"],"names":["React","Card","Carousel","Comment","Tag","List","UserOutlined","LinkOutlined","PostDetails","props","data","userPostData","title","author","url","selftext","preview","thumbnail","imgUrl","images","source","getPostViaAuthorApi","listData","i","length","push","href","link_permalink","link_title","avatar","link_url","onChange","page","console","log","pageSize","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Carousel, Comment, Tag, List } from 'antd';\nimport { UserOutlined, LinkOutlined } from '@ant-design/icons';\nimport './index.scss'\n\nconst PostDetails = (props) => {\n    const { data, userPostData } = props\n    const {title, author, url, selftext, preview, thumbnail } = data\n\n    const imgUrl = preview ? preview.images[0].source.url : ''\n    const getPostViaAuthorApi = `https://www.reddit.com/user/${author}.json`\n\n    const listData = [];\n    for (let i = 0; i < userPostData.length; i++) {\n        listData.push({\n            href: userPostData[i].url || userPostData[i].link_permalink,\n            title: userPostData[i].title || userPostData[i].link_title,\n            avatar: '',\n            link_url: userPostData[i].link_url,\n        });\n    }\n\n    return (\n        <Card\n            cover={\n                <Carousel effect=\"fade\">\n                    <img\n                        alt=\"thumbnail\"\n                        src={thumbnail || 'https://servicechannel.com/wp-content/uploads/2020/01/2020-home-hero-image-rev.png'}\n                    />\n                    {imgUrl && <img\n                        alt=\"preImg Forbidden 403\"\n                        src={imgUrl}\n                    />}\n                </Carousel>\n            }\n        >\n            {!author && <div>Please go through step 1 _> step 2,  then you'll see the post info here</div>}\n            {author && (\n                <>\n                    <p className=\"postTitle\">{title}</p>\n                    <Comment\n                        author={<Tag color=\"success\">Author: {author}</Tag>}\n                        avatar={<UserOutlined />}\n                        content={\n                            <>\n                                <LinkOutlined />Current Link:<a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{url}</a>\n                                <p>{selftext ? selftext : '(NO text)'}</p>\n                            </>\n                        }\n                    />\n                    <h5>Author posts list:(<a target=\"_blank\" rel=\"noopener noreferrer\" href={getPostViaAuthorApi}>{getPostViaAuthorApi}</a>)</h5>\n                    <List\n                        itemLayout=\"vertical\"\n                        size=\"large\"\n                        pagination={{\n                        onChange: page => {\n                            console.log(page);\n                        },\n                        pageSize: 6,\n                        }}\n                        dataSource={listData}\n                        renderItem={(item, index) => (\n                            <List.Item\n                                key={item.title}\n                            >\n                                <List.Item.Meta\n                                    title={<a target=\"_blank\" rel=\"noopener noreferrer\" href={item.href}>{item.title}</a>}\n                                    // description={item.description}\n                                />\n                                {/* {item.content} */}\n                            </List.Item>\n                        )}\n                    />\n                </>\n            )}\n        </Card>\n    );\n}\n\nexport default PostDetails"]},"metadata":{},"sourceType":"module"}