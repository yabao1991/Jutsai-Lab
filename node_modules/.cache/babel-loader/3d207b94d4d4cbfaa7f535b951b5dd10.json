{"ast":null,"code":"var First_Bad_Version={id:'0008',name:'First_Bad_Version',refLink:['https://www.jiuzhang.com/solution/first-bad-version/','https://www.jiuzhang.com/solutions/first-bad-version/','https://leetcode-cn.com/problems/first-bad-version/solution/er-fen-cha-zhao-by-cctt-2/'],level:'Easy',tag:['Binary Search'],notes:\"\",jsSolution:\"\\n        // The code base version is an integer start from 1 to n. One day, \\n        // someone committed a bad version in the code case, \\n        // so it caused this version and the following versions are all failed in the unit tests. Find the first bad version.\\n\\n        // You can call isBadVersion to help you determine which version is the first bad one. \\n        // The details interface can be found in the code's annotation part.\\n        \\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/first-bad-version/\\n\\n        /**\\n         * @param n: An integer\\n         * @return: An integer which is the first bad version.\\n         */\\n        const findFirstBadVersion = function (n) {\\n            // write your code here\\n            var left = 1;\\n            var right = n;\\n            while(left<right){\\n                mid = left+Math.floor((right-left)/2);\\n                if(isBadVersion(mid)){\\n                    right = mid;\\n                }else{\\n                    left=mid+1;\\n                }\\n            }\\n            return left;\\n        }\\n    \"};export default First_Bad_Version;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/First_Bad_Version.js"],"names":["First_Bad_Version","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,iBAAiB,CAAG,CACtBC,EAAE,CAAE,MADkB,CAEtBC,IAAI,CAAE,mBAFgB,CAGtBC,OAAO,CAAE,CACL,sDADK,CAEL,uDAFK,CAGL,wFAHK,CAHa,CAQtBC,KAAK,CAAE,MARe,CAStBC,GAAG,CAAE,CACD,eADC,CATiB,CAYtBC,KAAK,GAZiB,CAatBC,UAAU,omCAbY,CAA1B,CA4CA,cAAeP,CAAAA,iBAAf","sourcesContent":["const First_Bad_Version = {\n    id: '0008',\n    name: 'First_Bad_Version',\n    refLink: [\n        'https://www.jiuzhang.com/solution/first-bad-version/',\n        'https://www.jiuzhang.com/solutions/first-bad-version/',\n        'https://leetcode-cn.com/problems/first-bad-version/solution/er-fen-cha-zhao-by-cctt-2/'\n    ],\n    level: 'Easy',\n    tag: [\n        'Binary Search',\n    ],\n    notes: ``,\n    jsSolution: `\n        // The code base version is an integer start from 1 to n. One day, \n        // someone committed a bad version in the code case, \n        // so it caused this version and the following versions are all failed in the unit tests. Find the first bad version.\n\n        // You can call isBadVersion to help you determine which version is the first bad one. \n        // The details interface can be found in the code's annotation part.\n        \n        // 在线评测地址: https://www.lintcode.com/problem/first-bad-version/\n\n        /**\n         * @param n: An integer\n         * @return: An integer which is the first bad version.\n         */\n        const findFirstBadVersion = function (n) {\n            // write your code here\n            var left = 1;\n            var right = n;\n            while(left<right){\n                mid = left+Math.floor((right-left)/2);\n                if(isBadVersion(mid)){\n                    right = mid;\n                }else{\n                    left=mid+1;\n                }\n            }\n            return left;\n        }\n    `,\n}\n\nexport default First_Bad_Version"]},"metadata":{},"sourceType":"module"}