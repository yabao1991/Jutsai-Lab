{"ast":null,"code":"var find_peak_element={id:'0007',name:'find_peak_element',refLink:['https://www.lintcode.com/problem/find-peak-element/','https://www.lintcode.com/problem/find-peak-element/description','https://leetcode-cn.com/problems/find-peak-element/solution/'],level:'Easy',tag:['Binary Search'],notes:\"\",jsSolution:\"\\n        // There is an integer array which has the following features:\\n\\n        // The numbers in adjacent positions are different.\\n        // A[0] < A[1] && A[A.length - 2] > A[A.length - 1].\\n        // We define a position P is a peak if:\\n        \\n        // A[P] > A[P-1] && A[P] > A[P+1]\\n        // Find a peak element in this array. Return the index of the peak.\\n        \\n        // \\u5728\\u7EBF\\u8BC4\\u6D4B\\u5730\\u5740: https://www.lintcode.com/problem/find-peak-element/\\n\\n        /**\\n         * @param {number[]} nums\\n         * @return {number}\\n         */\\n        var findPeakElement = function(nums = []) {\\n            const length = nums.length;\\n            let index = length - 1;\\n            \\n            for(let i = 0; i < length - 1; i++) {\\n                const item = nums[i];\\n                const after = nums[i + 1];\\n\\n                if(item > after) {\\n                    return i;\\n                }\\n            }\\n\\n            return index;\\n        };\\n    \"};export default find_peak_element;","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/Binary_Search/find_peak_element.js"],"names":["find_peak_element","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AAAA,GAAMA,CAAAA,iBAAiB,CAAG,CACtBC,EAAE,CAAE,MADkB,CAEtBC,IAAI,CAAE,mBAFgB,CAGtBC,OAAO,CAAE,CACL,qDADK,CAEL,gEAFK,CAGL,8DAHK,CAHa,CAQtBC,KAAK,CAAE,MARe,CAStBC,GAAG,CAAE,CACD,eADC,CATiB,CAYtBC,KAAK,GAZiB,CAatBC,UAAU,o/BAbY,CAA1B,CA+CA,cAAeP,CAAAA,iBAAf","sourcesContent":["const find_peak_element = {\n    id: '0007',\n    name: 'find_peak_element',\n    refLink: [\n        'https://www.lintcode.com/problem/find-peak-element/',\n        'https://www.lintcode.com/problem/find-peak-element/description',\n        'https://leetcode-cn.com/problems/find-peak-element/solution/'\n    ],\n    level: 'Easy',\n    tag: [\n        'Binary Search',\n    ],\n    notes: ``,\n    jsSolution: `\n        // There is an integer array which has the following features:\n\n        // The numbers in adjacent positions are different.\n        // A[0] < A[1] && A[A.length - 2] > A[A.length - 1].\n        // We define a position P is a peak if:\n        \n        // A[P] > A[P-1] && A[P] > A[P+1]\n        // Find a peak element in this array. Return the index of the peak.\n        \n        // 在线评测地址: https://www.lintcode.com/problem/find-peak-element/\n\n        /**\n         * @param {number[]} nums\n         * @return {number}\n         */\n        var findPeakElement = function(nums = []) {\n            const length = nums.length;\n            let index = length - 1;\n            \n            for(let i = 0; i < length - 1; i++) {\n                const item = nums[i];\n                const after = nums[i + 1];\n\n                if(item > after) {\n                    return i;\n                }\n            }\n\n            return index;\n        };\n    `,\n}\n\nexport default find_peak_element"]},"metadata":{},"sourceType":"module"}