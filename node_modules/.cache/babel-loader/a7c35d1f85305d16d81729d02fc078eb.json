{"ast":null,"code":"// action creator\nexport function createSet(payload){return{type:'set',payload:payload};}var idSeq=Date.now();export function createAdd(text){// return {\n//     type: 'add',\n//     payload\n// }\nreturn function(dispatch,getState){setTimeout(function(){var _getState=getState(),todos=_getState.todos;if(!todos.find(function(todo){return todo.text===text;})){dispatch({type:'add',payload:{id:++idSeq,text:text,complete:false}});}},500);};}export function createRemove(payload){return{type:'remove',payload:payload};}export function createToggle(payload){return{type:'toggle',payload:payload};}","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/react/TodoList/pages/actions.js"],"names":["createSet","payload","type","idSeq","Date","now","createAdd","text","dispatch","getState","setTimeout","todos","find","todo","id","complete","createRemove","createToggle"],"mappings":"AAAA;AACA,MAAO,SAASA,CAAAA,SAAT,CAAmBC,OAAnB,CAA4B,CAC/B,MAAO,CACHC,IAAI,CAAE,KADH,CAEHD,OAAO,CAAPA,OAFG,CAAP,CAIH,CAED,GAAIE,CAAAA,KAAK,CAAGC,IAAI,CAACC,GAAL,EAAZ,CAEA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,IAAnB,CAAyB,CAC5B;AACA;AACA;AACA;AACA,MAAO,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC3BC,UAAU,CAAC,UAAM,eACMD,QAAQ,EADd,CACLE,KADK,WACLA,KADK,CAEb,GAAI,CAACA,KAAK,CAACC,IAAN,CAAW,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACN,IAAL,GAAcA,IAAlB,EAAf,CAAL,CAA6C,CACzCC,QAAQ,CAAC,CACLN,IAAI,CAAE,KADD,CAELD,OAAO,CAAE,CACLa,EAAE,CAAE,EAAEX,KADD,CAELI,IAAI,CAAJA,IAFK,CAGLQ,QAAQ,CAAE,KAHL,CAFJ,CAAD,CAAR,CAQH,CACJ,CAZS,CAYP,GAZO,CAAV,CAcH,CAfD,CAgBH,CAED,MAAO,SAASC,CAAAA,YAAT,CAAsBf,OAAtB,CAA+B,CAClC,MAAO,CACHC,IAAI,CAAE,QADH,CAEHD,OAAO,CAAPA,OAFG,CAAP,CAIH,CAED,MAAO,SAASgB,CAAAA,YAAT,CAAsBhB,OAAtB,CAA+B,CAClC,MAAO,CACHC,IAAI,CAAE,QADH,CAEHD,OAAO,CAAPA,OAFG,CAAP,CAIH","sourcesContent":["// action creator\nexport function createSet(payload) {\n    return {\n        type: 'set',\n        payload\n    }\n}\n\nlet idSeq = Date.now()\n\nexport function createAdd(text) {\n    // return {\n    //     type: 'add',\n    //     payload\n    // }\n    return (dispatch, getState) => {\n        setTimeout(() => {\n            const { todos, } = getState()\n            if (!todos.find(todo => todo.text === text)) {\n                dispatch({\n                    type: 'add',\n                    payload: {\n                        id: ++idSeq,\n                        text,\n                        complete: false\n                    }\n                })\n            }\n        }, 500)\n        \n    };\n}\n\nexport function createRemove(payload) {\n    return {\n        type: 'remove',\n        payload\n    }\n}\n\nexport function createToggle(payload) {\n    return {\n        type: 'toggle',\n        payload\n    }\n}"]},"metadata":{},"sourceType":"module"}