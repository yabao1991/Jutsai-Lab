{"ast":null,"code":"var TicTacToe={id:'0002',name:'Tic_Tac_Toe',refLink:[],level:'Easy',tag:[],notes:\"\",jsSolution:\"\\n        function calculateWinner(squares) {\\n            const lines = [\\n            [0, 1, 2],\\n            [3, 4, 5],\\n            [6, 7, 8],\\n            [0, 3, 6],\\n            [1, 4, 7],\\n            [2, 5, 8],\\n            [0, 4, 8],\\n            [2, 4, 6]\\n            ];\\n            for (let i = 0; i < lines.length; i++) {\\n            const [a, b, c] = lines[i];\\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\\n                return lines[i];\\n            }\\n            }\\n            return null;\\n        }\\n        \\n        class Game extends React.Component {\\n            constructor(props) {\\n            super(props);\\n            this.state = {\\n                history: [\\n                {\\n                    squares: Array(9).fill(null)\\n                }\\n                ],\\n                stepNumber: 0,\\n                xIsNext: true\\n            };\\n            }\\n        \\n            handleClick(i) {\\n            const history = this.state.history.slice(0, this.state.stepNumber + 1);\\n            console.log(history.length);\\n            const current = history[history.length - 1];\\n            const squares = current.squares.slice();\\n            if (calculateWinner(squares) || squares[i]) {\\n                return;\\n            }\\n        \\n            squares[i] = this.state.xIsNext ? \\\"X\\\" : \\\"O\\\";\\n            this.setState({\\n                history: history.concat([\\n                {\\n                    squares: squares\\n                }\\n                ]),\\n                stepNumber: history.length,\\n                xIsNext: !this.state.xIsNext\\n            });\\n            }\\n        \\n            jumpTo(step) {\\n            this.setState({\\n                stepNumber: step,\\n                xIsNext: step % 2 === 0\\n            });\\n            }\\n        \\n            render() {\\n            const history = this.state.history;\\n            const current = history[this.state.stepNumber];\\n            const winnerLines = calculateWinner(current.squares);\\n            const winner = winnerLines ? current.squares[winnerLines[0]] : null;\\n            const moves = history.map((step, move) => {\\n                const desc = move ? \\\"Go to move #\\\" + move : \\\"Go to game start\\\";\\n                return (\\n                <li key={move}>\\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\\n                </li>\\n                );\\n            });\\n            const status = winner\\n                ? \\\"Winner: winner winnerLines\\\"\\n                : \\\"Next player: \\\" + (this.state.xIsNext ? \\\"X\\\" : \\\"O\\\");\\n        \\n            return (\\n                <div className=\\\"game\\\">\\n                <div className=\\\"game-board\\\">\\n                    <Board\\n                    squares={current.squares}\\n                    highlight={winner ? winnerLines : []}\\n                    onClick={i => this.handleClick(i)}\\n                    />\\n                </div>\\n                <div className=\\\"game-info\\\">\\n                    <div>{status}</div>\\n                    <ol>{moves}</ol>\\n                </div>\\n                </div>\\n            );\\n            }\\n        }\\n    \"};export default TicTacToe;// https://www.freecodecamp.org/forum/t/need-help-understanding-react-tic-tac-toe-winner-function/137840","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/bao/baoApp/views/examples/JsLeetcode/js/TicTacToe.js"],"names":["TicTacToe","id","name","refLink","level","tag","notes","jsSolution"],"mappings":"AACA,GAAMA,CAAAA,SAAS,CAAG,CACdC,EAAE,CAAE,MADU,CAEdC,IAAI,CAAE,aAFQ,CAGdC,OAAO,CAAE,EAHK,CAIdC,KAAK,CAAE,MAJO,CAKdC,GAAG,CAAE,EALS,CAMdC,KAAK,GANS,CAOdC,UAAU,sqGAPI,CAAlB,CA2GA,cAAeP,CAAAA,SAAf,CAGA","sourcesContent":["\nconst TicTacToe = {\n    id: '0002',\n    name: 'Tic_Tac_Toe',\n    refLink: [],\n    level: 'Easy',\n    tag: [],\n    notes: ``,\n    jsSolution: `\n        function calculateWinner(squares) {\n            const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n            ];\n            for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return lines[i];\n            }\n            }\n            return null;\n        }\n        \n        class Game extends React.Component {\n            constructor(props) {\n            super(props);\n            this.state = {\n                history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n                ],\n                stepNumber: 0,\n                xIsNext: true\n            };\n            }\n        \n            handleClick(i) {\n            const history = this.state.history.slice(0, this.state.stepNumber + 1);\n            console.log(history.length);\n            const current = history[history.length - 1];\n            const squares = current.squares.slice();\n            if (calculateWinner(squares) || squares[i]) {\n                return;\n            }\n        \n            squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n            this.setState({\n                history: history.concat([\n                {\n                    squares: squares\n                }\n                ]),\n                stepNumber: history.length,\n                xIsNext: !this.state.xIsNext\n            });\n            }\n        \n            jumpTo(step) {\n            this.setState({\n                stepNumber: step,\n                xIsNext: step % 2 === 0\n            });\n            }\n        \n            render() {\n            const history = this.state.history;\n            const current = history[this.state.stepNumber];\n            const winnerLines = calculateWinner(current.squares);\n            const winner = winnerLines ? current.squares[winnerLines[0]] : null;\n            const moves = history.map((step, move) => {\n                const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n                return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n                );\n            });\n            const status = winner\n                ? \"Winner: winner winnerLines\"\n                : \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n        \n            return (\n                <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                    squares={current.squares}\n                    highlight={winner ? winnerLines : []}\n                    onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n                </div>\n            );\n            }\n        }\n    `\n}\n\nexport default TicTacToe\n\n\n// https://www.freecodecamp.org/forum/t/need-help-understanding-react-tic-tac-toe-winner-function/137840"]},"metadata":{},"sourceType":"module"}