{"ast":null,"code":"import _slicedToArray from\"/Users/yabao/Documents/githubspace/Jutsai-Lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{bindActionCreators}from\"redux\";import{connect}from\"react-redux\";import{GetSalesData}from\"../../../redux/Actions\";import{Link}from\"react-router-dom\";// import { ToastContainer } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\nimport{Layout,Card// Spin,\n,Drawer,Button// Radio,\n// Space\n}from'antd';import{MenuOutlined}from'@ant-design/icons';// core components\nimport HeaderSection from\"../../../components/Header\";// import SideBar from \"../../../components/SideBar\"\nimport FooterSection from\"../../../components/Footer\";// inside section components \n// import LineChart from \"../../../components/LineChart\"\nimport MobileChart from\"../../../components/LineChart/MobileChart\";import MobileTable from\"../../../components/Table/Mobile\";// import { mockData } from \"../../../assets/mockData/data\"\n// import UtilFunctions from \"../../../utils/UtilFunctions\"\nimport\"./Sales.scss\";var Content=Layout.Content;// const { Sider } = Layout;\nvar Meta=Card.Meta;function Sales(props){// const [salesData, setSalesData] = React.useState({}) \nReact.useEffect(function(){document.title='Sales - Retail';// setSalesData(UtilFunctions.getForm\nvar GetSalesData=props.action.GetSalesData;GetSalesData();},[props.action]);// console.log(\"salesData\", salesData)\nvar salesData=props.salesData;var data=salesData.data;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),visible=_React$useState2[0],setVisible=_React$useState2[1];var showDrawer=function showDrawer(){setVisible(true);};var _onClose=function onClose(){setVisible(false);};return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(HeaderSection,null),/*#__PURE__*/React.createElement(Card,{style:{width:'80%',marginTop:90,marginLeft:75}// cover={data.image ? <img alt=\"product\" src={data.image} /> : <Spin className=\"spinWrap\" size=\"large\" />}\n},/*#__PURE__*/React.createElement(Meta,{title:data.title}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return showDrawer();},style:{marginTop:-20,position:'absolute'}},/*#__PURE__*/React.createElement(MenuOutlined,null))),/*#__PURE__*/React.createElement(Layout,{className:\"mainLayoutWrap_mobile\"},/*#__PURE__*/React.createElement(Content,null,/*#__PURE__*/React.createElement(MobileChart,null),/*#__PURE__*/React.createElement(MobileTable,null)),/*#__PURE__*/React.createElement(FooterSection,null)),/*#__PURE__*/React.createElement(Drawer,{title:\"Menu\",placement:'bottom',closable:false,onClose:function onClose(){return _onClose();},visible:visible,key:'bottom'},/*#__PURE__*/React.createElement(Link,{to:\"/retail/mobile/overview\"},\"OVERVIEW\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Link,{to:\"/retail/mobile/sales\"},\"SALES\")));}var mapStateToProps=function mapStateToProps(state){return{salesData:state.salesData};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{action:bindActionCreators({GetSalesData:GetSalesData},dispatch)};};export default connect(mapStateToProps,mapDispatchToProps)(Sales);","map":{"version":3,"sources":["/Users/yabao/Documents/githubspace/Jutsai-Lab/src/apps/stacklineTest/views/MobileRetail/Sales/index.js"],"names":["React","bindActionCreators","connect","GetSalesData","Link","Layout","Card","Drawer","Button","MenuOutlined","HeaderSection","FooterSection","MobileChart","MobileTable","Content","Meta","Sales","props","useEffect","document","title","action","salesData","data","useState","visible","setVisible","showDrawer","onClose","width","marginTop","marginLeft","position","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { GetSalesData } from \"../../../redux/Actions\";\nimport {\n  Link,\n} from \"react-router-dom\";\n// import { ToastContainer } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\nimport { Layout, Card,\n  // Spin,\n  Drawer,\n  Button,\n  // Radio,\n  // Space\n} from 'antd';\nimport {\n  MenuOutlined\n} from '@ant-design/icons';\n\n// core components\nimport HeaderSection from \"../../../components/Header\"\n// import SideBar from \"../../../components/SideBar\"\nimport FooterSection from \"../../../components/Footer\"\n\n// inside section components \n// import LineChart from \"../../../components/LineChart\"\nimport MobileChart from \"../../../components/LineChart/MobileChart\"\nimport MobileTable from \"../../../components/Table/Mobile\"\n\n// import { mockData } from \"../../../assets/mockData/data\"\n// import UtilFunctions from \"../../../utils/UtilFunctions\"\n\nimport \"./Sales.scss\";\n\nconst { Content } = Layout;\n// const { Sider } = Layout;\nconst { Meta } = Card;\n\nfunction Sales(props) {\n  // const [salesData, setSalesData] = React.useState({}) \n  React.useEffect(() => {\n    document.title = 'Sales - Retail'\n    // setSalesData(UtilFunctions.getForm\n    const { GetSalesData } = props.action;\n    GetSalesData()\n  }, [props.action]);\n\n  // console.log(\"salesData\", salesData)\n  const { salesData } = props\n  const { data } = salesData \n\n  const [visible, setVisible] = React.useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n  return (\n    <Layout>\n      <HeaderSection />\n      {/* <SideBar sideBarSalesData={data} /> */}\n      {/* <ToastContainer /> */}\n      {/* <SideBar /> */}\n      \n      <Card\n        style={{ width: '80%', marginTop: 90, marginLeft: 75 }}\n        // cover={data.image ? <img alt=\"product\" src={data.image} /> : <Spin className=\"spinWrap\" size=\"large\" />}\n      >\n        <Meta title={data.title} />\n        <Button onClick={() => showDrawer()} style={{ marginTop: -20, position: 'absolute' }}>\n          <MenuOutlined />\n        </Button>\n      </Card>\n        \n      <Layout className=\"mainLayoutWrap_mobile\">\n        <Content>\n          {/* <LineChart chartSalesDataArr={salesData.chartSalesDataArr}/> */}\n          {/* <LineChart chartSalesDataArr={salesData.sales}/> */}\n          {/* <Chart chartSalesDataArr={data.chartSalesDataArr} /> */}\n          <MobileChart />\n          {/* <Table tableSalesDataArr={data.sales}/> */}\n          <MobileTable />\n        </Content>\n        <FooterSection />\n      </Layout>\n      <Drawer\n          title=\"Menu\"\n          placement={'bottom'}\n          closable={false}\n          onClose={()=>onClose()}\n          visible={visible}\n          key={'bottom'}\n        >\n          <Link to=\"/retail/mobile/overview\">OVERVIEW</Link>\n          <br />\n          <Link to=\"/retail/mobile/sales\">SALES</Link>\n        </Drawer>\n    </Layout>\n  );\n}\n\nconst mapStateToProps = state => ({\n  salesData: state.salesData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  action: bindActionCreators({ GetSalesData }, dispatch)\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sales);\n"]},"metadata":{},"sourceType":"module"}